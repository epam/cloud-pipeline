#!/usr/bin/env bash

# Copyright 2017-2024 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Use the following environment variables to control the installation behavior"
# CP_CAP_DISTR_MODULES_SOURCES - http location of the "modules" sources ditribution tarball
# CP_CAP_MODULES_INSTALL_DIR - where to install "modules" (default: /usr/local/modules for modules and /usr/local/ for lmod)
# CP_CAP_MODULES_FILES_DIR - where are the modules files located (default: /usr/local/modules/modulesfiles for modules package
#                            and /usr/local/lmod/lmod/modulefiles for lmod)
# CP_CAP_MODULES_TYPE - type of the module system tcl/lmod (default: tcl)

MODULES_INSTALL_TASK="InstallEnvironmentModules"

######################################################
# Check if this is a RPM Linux distribution
######################################################
/usr/bin/rpm -q -f /usr/bin/rpm >/dev/null 2>&1
IS_RPM_BASED=$?

######################################################
# Install Environment Modules
# https://modules.readthedocs.io/en/latest/module.html
######################################################

CP_CAP_MODULES_TYPE="${CP_CAP_MODULES_TYPE:-tcl}"
CP_CAP_MODULES_TRACK_USAGE="${CP_CAP_MODULES_TRACK_USAGE:-false}"
CP_CAP_MODULES_USAGE_TASK="${CP_CAP_MODULES_USAGE_TASK:-"ModulesUsage"}"

if [ "$CP_CAP_MODULE_PREINSTALLED" != "true" ]; then
  pipe_log_info "--> Installing Environment Modules: $CP_CAP_MODULES_TYPE" "$MODULES_INSTALL_TASK"
else
  pipe_log_info "--> Configuring Environment Modules: $CP_CAP_MODULES_TYPE" "$MODULES_INSTALL_TASK"
fi

mkdir -p /tmp/modules-tmp
cd /tmp/modules-tmp

if [ "$CP_CAP_MODULE_PREINSTALLED" != "true" ]; then
    # Grab the sources of modules
    if [ "$CP_CAP_MODULES_TYPE" == "tcl" ]; then
        MODULES_SOURCES_URL_S3="${GLOBAL_DISTRIBUTION_URL}tools/modules/sources/modules-4.2.4.tar.gz"
        MODULES_SOURCES_URL_ALT="https://github.com/cea-hpc/modules/releases/download/v4.2.4/modules-4.2.4.tar.gz"
        MODULES_SOURCES_URL="${CP_CAP_DISTR_MODULES_SOURCES:-$MODULES_SOURCES_URL_S3}"
    elif [ "$CP_CAP_MODULES_TYPE" == "lmod" ]; then
        MODULES_SOURCES_URL_S3="${GLOBAL_DISTRIBUTION_URL}tools/lmod/sources/Lmod-8.3.tar.gz"
        MODULES_SOURCES_URL_ALT="https://github.com/TACC/Lmod/archive/8.3.tar.gz"
        MODULES_SOURCES_URL="${CP_CAP_DISTR_MODULES_SOURCES:-$MODULES_SOURCES_URL_S3}"
    fi

    wget -q "$MODULES_SOURCES_URL" -O modules.tar.gz
    if [ $? -ne 0 ]; then
        pipe_log_info "Unable to get the modules sources from ${MODULES_SOURCES_URL}, trying alternative source" "$MODULES_INSTALL_TASK"
        MODULES_SOURCES_URL="$MODULES_SOURCES_URL_ALT"

        wget -q "$MODULES_SOURCES_URL" -O modules.tar.gz
        if [ $? -ne 0 ]; then
            pipe_log_fail "Failed to download modules sources from ${MODULES_SOURCES_URL}, exiting" "$MODULES_INSTALL_TASK"
            exit 1
        fi
    fi

    tar -zxf modules.tar.gz
fi

_MODULES_INSTALL_RESULT=1
if [ "$CP_CAP_MODULES_TYPE" == "tcl" ]; then
    if [ "$CP_CAP_MODULE_PREINSTALLED" != "true" ]; then
        if [[ "$IS_RPM_BASED" = 0 ]]; then
            yum -y -q install tcl-devel less
            _MODULES_INSTALL_RESULT=$?
        else
            apt-get install tcl-dev less -y -qq
            _MODULES_INSTALL_RESULT=$?
        fi

        if [ $_MODULES_INSTALL_RESULT -ne 0 ]; then
            pipe_log_fail "Failed to install Environment Modules dependencies" "$MODULES_INSTALL_TASK"
            exit 1
        fi

        cd modules*

        # Install modules
        MODULES_INSTALL_DIR="${CP_CAP_MODULES_INSTALL_DIR:-/usr/local/modules}"
        MODULES_FILES_DIR="${CP_CAP_MODULES_FILES_DIR:-$MODULES_INSTALL_DIR/modulesfiles}"

        MODULES_BUILD_LOG=/var/log/modules_build.log
        ./configure --prefix=$MODULES_INSTALL_DIR \
                    --modulefilesdir=$MODULES_FILES_DIR \
                    --enable-example-modulefiles=no > $MODULES_BUILD_LOG 2>&1 && \
        make -j $(nproc) >> $MODULES_BUILD_LOG 2>&1 && \
        make install >> $MODULES_BUILD_LOG 2>&1
        if [ $? -ne 0 ]; then
            pipe_log_fail "Unable to install modules from sources, exiting. Build logs are available in $MODULES_BUILD_LOG" "$MODULES_INSTALL_TASK"
            exit 1
        fi
    fi

    # Configure the modules setup
    if [ -f $MODULES_INSTALL_DIR/init/profile.sh ]; then
        rm -f /etc/profile.d/modules.sh
    fi
    ln -s $MODULES_INSTALL_DIR/init/profile.sh /etc/profile.d/modules.sh

elif [ "$CP_CAP_MODULES_TYPE" == "lmod" ]; then
    if [ "$CP_CAP_MODULE_PREINSTALLED" != "true" ]; then
        if [[ "$IS_RPM_BASED" = 0 ]]; then
            yum install -y -q lua lua-bitop lua-devel lua-filesystem \
            lua-json lua-lpeg lua-posix lua-term tcl4 tcl-devel less gcc
            _MODULES_INSTALL_RESULT=$?
        else
            apt install make tcl-dev rsync lua5.2 lua-bitop lua-filesystem lua-json lua-lpeg lua-posix lua-term less gcc  -y
            wget -q https://sourceforge.net/projects/lmod/files/lua-5.1.4.9.tar.bz2 -O lua-5.1.4.9.tar.bz2 && \
            tar xf lua-5.1.4.9.tar.bz2 && rm -f lua-5.1.4.9.tar.bz2 && \
            cd lua-5.1.4.9 && \
            ./configure --prefix=/opt/apps/lua/5.1.4.9 && \
            make; make install && \
            ln -s /opt/apps/lua/5.1.4.9 /opt/apps/lua/lua && \
            ln -s /opt/apps/lua/lua/bin/lua /usr/local/bin && \
            cd ..
            _MODULES_INSTALL_RESULT=$?
        fi

        if [ $_MODULES_INSTALL_RESULT -ne 0 ]; then
            pipe_log_fail "Failed to install Environment Modules dependencies" "$MODULES_INSTALL_TASK"
            exit 1
        fi

        cd Lmod*

        # Install modules
        MODULES_INSTALL_DIR="${CP_CAP_MODULES_INSTALL_DIR:-/usr/local}"

        MODULES_BUILD_LOG=/var/log/modules_build.log
        ./configure --prefix=$MODULES_INSTALL_DIR > $MODULES_BUILD_LOG 2>&1 && \
        make -j $(nproc) >> $MODULES_BUILD_LOG 2>&1 && \
        make install >> $MODULES_BUILD_LOG 2>&1
        if [ $? -ne 0 ]; then
            pipe_log_fail "Unable to install lmod from sources, exiting. Build logs are available in $MODULES_BUILD_LOG" "$MODULES_INSTALL_TASK"
            exit 1
        fi
    fi

    # Configure the modules setup
    if [ -f $MODULES_INSTALL_DIR/lmod/lmod/init/profile ]; then
        rm -f /etc/profile.d/lmod.sh
        rm -f /etc/profile.d/modules.sh
    fi
    ln -s $MODULES_INSTALL_DIR/lmod/lmod/init/profile /etc/profile.d/lmod.sh
    # modules.sh will be source by the launch.sh to make the "module" command available for the init process (e.g. "pipelines" scripts)
    ln -s /etc/profile.d/lmod.sh /etc/profile.d/modules.sh
    MODULES_FILES_DIR="${CP_CAP_MODULES_FILES_DIR:-$MODULES_INSTALL_DIR/lmod/lmod/modulesfiles/Core}"
    echo "export MODULES_FILES_DIR="$MODULES_FILES_DIR"" >> /etc/cp_env.sh
    echo "export MODULEPATH="\$MODULEPATH:\$MODULES_FILES_DIR"" >> /etc/cp_env.sh

    # Configure module usage tracking
    if [ "$CP_CAP_MODULES_TRACK_USAGE" == "true" ]; then
        CP_CAP_MODULES_CONFIG_DIR="${CP_CAP_MODULES_CONFIG_DIR:-$MODULES_FILES_DIR}"
        if [ ! -f "$CP_CAP_MODULES_CONFIG_DIR/SitePackage.lua" ]; then
            mkdir -p "$CP_CAP_MODULES_CONFIG_DIR"
            cat > "$CP_CAP_MODULES_CONFIG_DIR/SitePackage.lua" << EOF
local hook =  require("Hook")
local uname = require("posix").uname

local module_msg = {}

local function load_hook(t)
   if (mode() ~= "load") then return end
   local msg = string.format("user=%s module=%s path=%s host=%s time=%f",
                             os.getenv("USER"), t.modFullName, t.fn, uname("%n"),
                             epoch())
   module_msg[t.modFullName] = msg
end

hook.register("load", load_hook)

local function report_loads()
   for k,msg in pairs(module_msg) do
      lmod_system_execute("pipe_log_info \"" .. msg .. "\" \"$CP_CAP_MODULES_USAGE_TASK\"")
   end
end

ExitHookA.register(report_loads)
EOF
        fi
        echo "export LMOD_PACKAGE_PATH=$CP_CAP_MODULES_CONFIG_DIR" >> /etc/cp_env.sh
        pipe_log_info "--> Configured Environment Modules usage tracking" "$MODULES_INSTALL_TASK"
    fi
fi

# Cleanup
cd /
rm -rf /tmp/modules-tmp

pipe_log_info "--> Environment Modules installed" "$MODULES_INSTALL_TASK"
pipe_log_success "Finished Environment Modules installation" "$MODULES_INSTALL_TASK"
