#!/usr/bin/env bash

# Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

MASTER_NAME="$1"

SPARK_WORKER_SETUP_TASK="SparkWorkerSetup"

pipe_log_info "Starting Spark worker setup" "$SPARK_WORKER_SETUP_TASK"

if [ "$MASTER_NAME" ]; then
    pipe_log_info "Master info is provided via parameter: $MASTER_NAME" "$SPARK_WORKER_SETUP_TASK"
else
    MASTER_INFO_RESULT=$(eval "${CP_PYTHON2_PATH} ${COMMON_REPO_DIR}/scripts/cluster_wait_for_master.py --master-id ${parent_id} --task-name SparkMasterSetup")
    _MASTER_AWAIT_RESULT=$?
    MASTER_INFO=($MASTER_INFO_RESULT)
    MASTER_IP=${MASTER_INFO[-1]}
    MASTER_NAME=${MASTER_INFO[-2]}

    if [ "$_MASTER_AWAIT_RESULT" -ne 0 ]; then
        pipe_log_fail "Failed to install Spark worker. Unable to get master information" "$SPARK_WORKER_SETUP_TASK"
        exit 1
    fi

    pipe_log_info "Master info received: $MASTER_NAME : $MASTER_IP" "$SPARK_WORKER_SETUP_TASK"
fi

export CP_CAP_SPARK_HOST="$MASTER_NAME"
export CP_CAP_SPARK_PORT="${CP_CAP_SPARK_PORT:-7077}"
export CP_CAP_SPARK_URL="spark://${CP_CAP_SPARK_HOST}:${CP_CAP_SPARK_PORT}"
export CP_CAP_SPARK_INSTALL_DIR="${CP_CAP_SPARK_INSTALL_DIR:-/common/spark}"
export CP_CAP_SPARK_WORKER_CORES="${CP_CAP_SPARK_WORKER_CORES:-$(nproc)}"


if ! java -version > /dev/null 2>&1 || [ ! -d "$JAVA_HOME" ]; then
    export JAVA_HOME="$CP_CAP_SPARK_INSTALL_DIR/jdk"
    export PATH="$JAVA_HOME/bin:$PATH"
    pipe_log_info "JAVA is not loaded, will try to get the master's jdk from $JAVA_HOME" "$SPARK_WORKER_SETUP_TASK"

    if ! java -version > /dev/null 2>&1; then
        pipe_log_fail "JAVA cannot be loaded from $JAVA_HOME ('java -version' failed), aborting Spark worker setup)" "$SPARK_WORKER_SETUP_TASK"
        exit 1
    fi

    pipe_log_info "JAVA loaded from $JAVA_HOME" "$SPARK_WORKER_SETUP_TASK"
fi

pipe_log_info "Starting Spark worker service using URL: $CP_CAP_SPARK_URL and CPU cores: $CP_CAP_SPARK_WORKER_CORES" "$SPARK_WORKER_SETUP_TASK"
spark_worker_start_attempts="${CP_CAP_SPARK_WORKER_RETRY_COUNT:-5}"
while (( "$spark_worker_start_attempts" > 0 )); do
    $CP_CAP_SPARK_INSTALL_DIR/sbin/start-slave.sh "$CP_CAP_SPARK_URL" --cores "$CP_CAP_SPARK_WORKER_CORES"
    if [ $? -ne 0 ]; then
        spark_worker_start_attempts=$(( spark_worker_start_attempts - 1 ))
        pipe_log_warn "Spark worker startup failed, $spark_worker_start_attempts more attempts will be performed" "$SPARK_WORKER_SETUP_TASK"
        sleep 5
        continue
    fi
    spark_worker_started=1
    break
done
if [ -z "$spark_worker_started" ]; then
    pipe_log_fail "Spark worker startup failed, aborting. Please review the logs in $CP_CAP_SPARK_INSTALL_DIR/logs" "$SPARK_WORKER_SETUP_TASK"
    exit 1
fi

pipe_log_success "Spark worker is started and connected to the master" "$SPARK_WORKER_SETUP_TASK"
exit 0
