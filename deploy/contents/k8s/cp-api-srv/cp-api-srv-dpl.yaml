apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cp-api-srv
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      namespace: default
      labels:
        cloud-pipeline/cp-api-srv: "true"
    spec:
      nodeSelector:
        cloud-pipeline/cp-api-srv: "true"
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
        - name: cp-api-srv
          image: lifescience/cloud-pipeline:api-srv-$CP_VERSION
          imagePullPolicy: "Always"
          securityContext:
            privileged: true
          command: ["/init-api"]
          ports:
            - containerPort: 8080
          envFrom:
          - configMapRef:
              name: cp-config-global
          volumeMounts:
            - mountPath: /opt/api/pki
              name: api-pki
            - mountPath: /opt/api/sso
              name: api-sso
            - mountPath: /opt/api/logs
              name: api-logs
            - mountPath: ${CP_PREF_TEMPLATES_DIRECTORY_EXT}
              name: api-pipe-templates
            - mountPath: ${CP_PREF_TEMPLATES_FOLDER_DIRECTORY_EXT}
              name: api-folder-templates
            - mountPath: /opt/idp/pki
              name: idp-pki
            - mountPath: /opt/common/pki
              name: common-pki
              readOnly: true
            - mountPath: /opt/gitlab/pki
              name: git-pki
              readOnly: true
            - mountPath: /root/.kube
              name: kube-config
              readOnly: true
            - name: cp-cloud-credentials
              mountPath: "/root/.cloud"
              readOnly: true
              # Using /etc/cp_ssh instead of a "general" ~/.ssh/ because it may break some of the openssh-created files (e.g. known hosts)
              # as this volumes is mounted "read only"
            - name: cp-cluster-ssh-key
              mountPath: "/etc/cp_ssh"
              readOnly: true
          readinessProbe:
            httpGet:
              path: /pipeline/launch.sh
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "kill -9 $(pgrep -f pipeline.jar); sleep 1"]
      volumes:
        - name: api-pki
          hostPath:
            path: /opt/api/pki
        - name: api-sso
          hostPath:
            path: /opt/api/sso
        - name: api-logs
          hostPath:
            path: /opt/api/logs
        - name: api-pipe-templates
          hostPath:
            path: /opt/api/templates/pipe-templates
        - name: api-folder-templates
          hostPath:
            path: /opt/api/templates/folder-templates
        - name: idp-pki
          hostPath:
            path: /opt/idp/pki
        - name: common-pki
          hostPath:
            path: /opt/common/pki
        - name: git-pki
          hostPath:
            path: /opt/gitlab/pki
        - name: kube-config
          hostPath:
            path: /root/.kube
        - name: cp-cloud-credentials
          secret:
            secretName: cp-cloud-credentials
        - name: cp-cluster-ssh-key
          secret:
            secretName: cp-cluster-ssh-key
            # Kube accepts mode in decimal. So 384 gives 600, which is required for SSH keys
            defaultMode: 384
      imagePullSecrets:
        - name: cp-distr-docker-registry-secret
