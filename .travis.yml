jdk: openjdk8
os: linux
dist: xenial
env:
  global:
  - secure: m2UM1yayaCbC12cz4EuUFtgtsVfnIm54G+OfDXxAv4+lARMXi3bunxHgvGO2rabbJM6+XHd6wolo2njTtDjO9JrjP/igP6InOz2uy2ZNXJRfg9+WFN2z7Jp1r1O6DLmt7dggO49xYeasykZDjFVpAIEk9JvXo8aHK0pCWQYkY6h/on14a3MW23HMLMp5rPdrR3T1Ku/r5j0fMU8mx76HAZTHnfXArBH4JP5OWGZlQSrsZnLQ4jLt2JqjlRMfO6CvKIefYI3WKhVpxQYtZUhLV6DRHZn+GtvzN3ZeiNpmY/KR2wkW8eWby+Cyir0I4UL3BEgPbMFxeysnTKLYj4s8pC/eD2zSf4GusB/bhgtERvtwrbl8HBtpJm0fbakSRoZC3Z/++PitZvmcUsQTg4CcJP/MPaYyrDNFHVL9YDkfbuuwGAQyVj5N5iqdf7m+8ftiOA/PEB+ajNH/z9Gxy2lYv1/+LABanMqaIzTpoWkzy+igkhIP7M07IsRgetd/JhrMj9D3kkkCzheW15rAFkp9cYkbtivHI1JUcJ5chFZO2TyjUbg5axOwhAZUdn32zcwysDIFzGMQtph3OouMloILdomiL/2LSSD6Y2HuhGcFjTCcx1hFJzDekbAoAlbBiWyDn5enR4j0Y1vhd1y9oXNp/Km9S1A5uVAXNnO8bkLszIA=
  - secure: PTgXHkxax7HcCUQQrD2NkvI8D8cgUYP5rN727fsEuzaR9owmaJcZiYclIB9uRMimzgwDvIbiIevrikAFSFKRNHve5SrZ6GvtOqUlqx55wPRQnCvX4JAPojHMcXH9ZqmG+dxk3r8/FuwpidYf1oIssXEvtT68JA0NnKtm+KvkD1Jb2WA2aCbf0NqMzZTyVgFK6ksvS8EZ528iQ1wURjJzbVkgbw+sxjUPLpmYrUxlvGlva+paCBLL7nsQ1IV2FLdLZDfCHNQP/SL3x0hTWlcsKUWOy7BldD5B032iu+ZNpLHj9PMB1NheuH7tBemrdDMRYGqkFqfIKvMSb+VkJxBQdiNa/sEYF6FH1Jcz3oSjDS6vWnZGP3a2uWIsK3j3/vOFE4581z20KHFojM3V6+eGuQ/ZHXfbjKBzVpkHr+DhKkaFe2GV2UO29AXpc7WjyI1N/FRhLUbGAUyXbT6QzMueXQGoh2oGbljT3MEzh5NauL1hU/O8hMzHP7w3SYkN2+KjO3/QsidnWvinEpNgPzlOSuBUCZdpFDMZijfCP42ESPj9JoKAoxEw3BW5DKp6vLiNSQ62gzK9Y+99urPYfxI0oTYvERv8zguZncllrf2H9D2cF4e0OuZ+qJ/Nm64cHK6RFqcdeWS0J7MDPzQpWG6nIdhJXxZ9PqzZnv2Ixfp+G90=
  - secure: NxQescyUUT2BgKJzMzPF9vvq2qMdugTe4RYYAQMSb+bjK9LT4OSWvV1/6AbJIk/e9rlAloQMMcmiYnwdVQWmrcFLXGlkIj0bltjlr+pyaGohItW88KsQqrSRI93xQp0pjwADd1Iu7oTuwLQItm1VYC9L5Dvd7wyeHwA0jTsHRR+zNrcsb+V6YNHhClJ1LA5jGVZ8fmcN/LfvhflXryVYqdIYijv6FTdi1AF6CgoNfuXNRMd09tzd+sWNGKWUm6KyN2xFD27mYn01sM2aa6+vVac4RCQ1i/rBc59GY//FruLEBiscs2VHX/krvMCeiUfRWfzEQ531eWZDl/O/X+INXPjm8RJR37wdFVtY3oujHRve7pEHu3Sy+glQUn34m8mKxM96UBePVAJGIRsuvcWYG6oBZqGaJuN7i/PGeYWm8/FzFqhLx7SmImHPd/jDT4bp7xHVMk5GbDuuDWGTpiu1LNBPB7KjgZIb6V4qO1FHLpLva2ZiFEKxcyVaQT5Xp3VcJk/dbgt+lriryz2zqEjNwKcfoFpMi/C4k7pthKM2bqjN+ccGx+3GLN1vKSJtvZc7mWmhP0v0xhb6rfTxoiup5xKLZBUHj4sytQjhVA2x6rwftXXnaPZzGmzcf5uqbo1GiM3IaOxQwDk+e0TmyE4QqxXxMVWoYJJzHP04feIzvxg=
  - secure: N4FF7fcPccQUipTlRNsSVc4DO5aLDrsODrxP1mZlHOxxyAjd0w0g9BVMqpwC7ARJI70L+iRdVWJrV0cAQHV2hotxwRNp13WMNC2UVBwzdGDatmFT+LffXdb0l0pjXsiqzYamQ2CeE1l+1BWyTzz9lMcRi22QfMxL4ciKqI2vO9d07DacDDEH1bsPdI8XgpPH7LvpjZEuMmz45CZgscBiSOLTcHCIpEun44R8c+4T1Z26sKTQ6qiBCOUpSeBvixEmL9LJQKkWZI7vTxOGiuueuR4fXzsscwP4BIt0IPw67yyjjdbbfqqNN88CVK1lOvBnV3gizcWfAnE9Vz3fRjG82c0OvjOwBJASRI2/Z0iGiYhgi8TU/cesicu35mSHi4Rp6GaRJz80in3LAhI9al/P3qh8eRo7g9d0sNe25sPlcWEi47Hek2XbUAMxsws1V4NYXUa1zf9F4PiMK8qfoOxdhF8RkSKY/abbW91uLiptsdbIHSYiL3gBRZqJk7fdfQfUJLTuV1o02zXNbvsB+yv3X5zKs6bu/AyqsT1alqMhxoIqZ4MP/ikLeo4EeYYoUonJNJ6ohainIzWlLjcfUlUb6RYXCqOCxrH0PaZ8N1CAgeOM9QUzzDKKkwGmre9O/ANef4i6ZEvFIzop9dshiPt23Gy6G+HLomgMHRs0wtx7WjM=

before_install:
  - pip install --user awscli==1.14.56

jobs:
  include:
    - stage: "Build"
      name: "Tests"
      addons:
        postgresql: '9.6'
      before_script:
        - psql -c "CREATE DATABASE pipeline_test;" -U postgres
        - psql -c "CREATE SCHEMA pipeline; ALTER ROLE postgres IN DATABASE pipeline_test SET search_path TO pipeline;" -U postgres -d pipeline_test
      install: true
      language: java
      script: ./gradlew :api:test --daemon
      if: tag IS present
  
    - stage: "Build"
      name: "Build GUI"
      install: true
      language: java
      script: 
        - ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release client:buildUI --daemon
        - tar -zcf client.tgz client/build
      after_success:
        - aws s3 mv client.tgz s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER}/

    - stage: "Build"
      name: "Build CLI Common/Linux"
      install: true
      language: java
      script:
        # Previously pipe-cli:build and pipe-cli:buildLinux were executed in a single gradle command
        # But this caused an invalid version set to the second one. See https://github.com/epam/cloud-pipeline/issues/561
        # As a workaround - commands were divided into two calls for now
        # FIXME: this shall be reviewed further to uncover the real causes of such a behavior
        - ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release pipe-cli:build --daemon
        - ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release pipe-cli:buildLinux --daemon
        - tar -zcf cli-linux.tgz pipe-cli/dist
      after_success:
        - aws s3 mv cli-linux.tgz s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER}/

    # This stage builds the "pipe" binary for el6-alike linux distributions (e.g. centos6/rhel6.5/etc)
    - stage: "Build"
      name: "Build CLI Linux (el6)"
      install: true
      language: java
      script:
        - _BUILD_DOCKER_IMAGE="${CP_DOCKER_DIST_SRV}lifescience/cloud-pipeline:python2.7-centos6" ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release pipe-cli:buildLinux --daemon
        - tar -zcf cli-linux-el6.tgz pipe-cli/dist
      after_success:
        - aws s3 mv cli-linux-el6.tgz s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER}/

    - stage: "Build"
      name: "Build CLI Win"
      install: true
      language: java
      script:
        - ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release pipe-cli:buildWin --daemon
        - tar -zcf cli-win.tgz pipe-cli/dist
      after_success:
        - aws s3 mv cli-win.tgz s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER}/

    - stage: "Build"
      name: "Build FS Browser"
      install: true
      language: java
      script:
        - ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release fs-browser:build --daemon
      after_success:
        - aws s3 mv fs-browser/dist/fsbrowser-*.tar.gz s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER}/

    - stage: "Build"
      name: "Build Cloud Data for Linux"
      install: true
      language: java
      script:
        - ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release cloud-pipeline-webdav-client:buildLinux --daemon
      after_success:
        - aws s3 mv cloud-pipeline-webdav-client/out/cloud-data-linux.tar.gz s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER}/

    - stage: "Build"
      name: "Build Cloud Data for Windows"
      install: true
      language: java
      script:
        - ./gradlew -PbuildNumber=${TRAVIS_BUILD_NUMBER}.${TRAVIS_COMMIT} -Pprofile=release cloud-pipeline-webdav-client:buildWin --daemon
      after_success:
        - aws s3 mv cloud-pipeline-webdav-client/out/cloud-data-win64.zip s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER}/

    - stage: "Deploy"
      name: "Pack jars and deploy"
      install:
        - pip install mkdocs --user
      language: java
      script:
        - bash deploy/travis/travis_pack_dist.sh

    - stage: "Deploy"
      name: "Publish docs"
      install:
        - pip install mkdocs --user
      language: java
      script:
        - bash deploy/travis/travis_publish_docs.sh

after_failure:
  - aws s3 rm s3://cloud-pipeline-oss-builds/temp/${TRAVIS_BUILD_NUMBER} --recursive