#tomcat configuration
server.port=9999
server.context-path=/pipeline
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=text/html,text/xml,application/json,application/javascript
server.connection-timeout=20000
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.force-response=true

#Security
api.security.anonymous.urls=${CP_API_SECURITY_ANONYMOUS_URLS:/restapi/route}

#db configuration
database.url=
database.username=pipeline
database.password=pipeline
database.driverClass=org.postgresql.Driver
database.max.pool.size=5
database.initial.pool.size=10

#monitoring configuration
monitoring.backend=
monitoring.stats.export.xls.template=${CP_API_MONITORING_XLS_TEMPLATE_PATH:classpath:/templates/monitoring_report_template.xls}

#flyway configuration
flyway.sql-migration-prefix=v
flyway.locations=classpath:db/migration
flyway.schemas=pipeline
flyway.placeholders.default.admin=
flyway.placeholders.default.admin.id=1

#applicaion configuration
working.directory=
api.host=
launch.script.url.linux=
init.script.url.linux=

#commit run scripts
commit.run.scripts.root.url=
commit.run.script.starter.url=

pause.run.script.url=
resume.run.script.url=
pause.pool.size=
run.scheduling=false

#luigi
kube.namespace=
luigi.graph.script=

#git
git.src.directory=src/
git.docs.directory=docs/

jwt.key.public=
jwt.key.private=

#sso config
server.ssl.ciphers=
server.ssl.key-store=
server.ssl.metadata=
server.ssl.key-store-password=
server.ssl.keyAlias=
server.ssl.endpoint.id=
saml.authorities.attribute.names=
saml.authn.request.binding=
saml.sign.key=
saml.user.attributes=
saml.user.auto.create=
saml.user.allow.anonymous=


#cluster management
cluster.nodeup.script=
cluster.nodedown.script=
cluster.keep.alive.minutes=
cluster.node.terminate.script=
cluster.cadvisor.port=4194

# Instance offers expiration check rate in milliseconds
kube.edge.label=EDGE
kube.edge.ip.label=
kube.edge.port.label=
kube.master.ip=
kube.kubeadm.token=

# Root mount point for mounting NFS file systems. Must be a directory, where pipeline's user has write access
data.storage.nfs.root.mount.point=
# Mount options for NFS
data.storage.nfs.options.rsize=1048576
data.storage.nfs.options.wsize=1048576

#Firecloud
firecloud.auth.client.id=
firecloud.auth.client.secret=
