<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean class="com.epam.pipeline.dao.datastorage.DataStorageDao" id="dataStorageDao" autowire="byName">
        <property name="dataStorageSequence" value="pipeline.s_datastorage"/>
        <property name="createDataStorageQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.datastorage (
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    ) VALUES (
                        :DATASTORAGE_ID,
                        :DATASTORAGE_NAME,
                        :DESCRIPTION,
                        :DATASTORAGE_TYPE,
                        :PATH,
                        :DATASTORAGE_ROOT_ID,
                        :STS_DURATION,
                        :LTS_DURATION,
                        :INCOMPLETE_UPLOAD_CLEANUP_DAYS,
                        :FOLDER_ID,
                        :CREATED_DATE,
                        :OWNER,
                        :ENABLE_VERSIONING,
                        :BACKUP_DURATION,
                        :DATASTORAGE_LOCKED,
                        :MOUNT_POINT,
                        :MOUNT_OPTIONS,
                        :SHARED,
                        :ALLOWED_CIDRS,
                        :REGION_ID,
                        :FILE_SHARE_MOUNT_ID,
                        :SENSITIVE,
                        :MOUNT_DISABLED,
                        :S3_KMS_KEY_ARN,
                        :S3_USE_ASSUMED_CREDS,
                        :S3_TEMP_CREDS_ROLE,
                        :MOUNT_STATUS,
                        :SOURCE_DATASTORAGE_ID,
                        to_jsonb(:MASKING_RULES::jsonb)
                    )
                ]]>
            </value>
        </property>
        <property name="updateDataStorageQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.datastorage SET
                        datastorage_name = :DATASTORAGE_NAME,
                        description = :DESCRIPTION,
                        sts_duration = :STS_DURATION,
                        lts_duration = :LTS_DURATION,
                        incomplete_upload_cleanup_days = :INCOMPLETE_UPLOAD_CLEANUP_DAYS,
                        folder_id = :FOLDER_ID,
                        owner = :OWNER,
                        enable_versioning = :ENABLE_VERSIONING,
                        backup_duration = :BACKUP_DURATION,
                        mount_point = :MOUNT_POINT,
                        mount_options = :MOUNT_OPTIONS,
                        mount_disabled = :MOUNT_DISABLED
                    WHERE
                        datastorage_id = :DATASTORAGE_ID
                ]]>
            </value>
        </property>
        <property name="deleteDataStorageQuery">
            <value>
                <![CDATA[
                    DELETE FROM pipeline.datastorage WHERE datastorage_id = ?
                ]]>
            </value>
        </property>
        <property name="loadAllDataStoragesQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    ORDER BY datastorage_id
                ]]>
            </value>
        </property>
        <property name="loadDataStoragesByIdsQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        datastorage_id IN (:DATASTORAGE_IDS)
                    ORDER BY datastorage_id
                ]]>
            </value>
        </property>
        <property name="loadRootDataStoragesQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        folder_id ISNULL
                ]]>
            </value>
        </property>
        <property name="loadDataStorageByIdQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        datastorage_id = ?
                ]]>
            </value>
        </property>
        <property name="loadDataStorageByNameQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        lower(datastorage_name) = lower(:DATASTORAGE_NAME) or lower(path) = lower(:PATH)
                ]]>
            </value>
        </property>
        <property name="loadDataStorageByPrefixesQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        path IN (:PATH)
                ]]>
            </value>
        </property>
        <property name="loadDataStorageByNameAndParentIdQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        (lower(datastorage_name) = lower(:DATASTORAGE_NAME) or lower(path) = lower(:PATH))
                        and folder_id = :FOLDER_ID
                ]]>
            </value>
        </property>
        <property name="loadDataStoragesByNFSRootPath">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        path like ?
                ]]>
            </value>
        </property>
        <property name="loadDataStoragesFileShareId">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        datastorage_name,
                        description,
                        datastorage_type,
                        path,
                        datastorage_root_id,
                        sts_duration,
                        lts_duration,
                        incomplete_upload_cleanup_days,
                        folder_id,
                        created_date,
                        owner,
                        enable_versioning,
                        backup_duration,
                        locked as datastorage_locked,
                        mount_point,
                        mount_options,
                        shared,
                        allowed_cidrs,
                        region_id as region_id,
                        file_share_mount_id,
                        sensitive,
                        mount_disabled,
                        s3_kms_key_arn,
                        s3_use_assumed_creds,
                        s3_temp_creds_role,
                        mount_status,
                        source_datastorage_id,
                        masking_rules
                    FROM
                        pipeline.datastorage
                    WHERE
                        file_share_mount_id = ?
                ]]>
            </value>
        </property>
        <property name="updateStorageLocksQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.datastorage SET
                        locked = :LOCKED
                    WHERE
                        datastorage_id IN (:IDS)
                ]]>
            </value>
        </property>
        <property name="loadStorageCountQuery">
            <value>
                <![CDATA[
                    SELECT count(*) FROM pipeline.datastorage
                ]]>
            </value>
        </property>
        <property name="loadAllStoragesWithParentsQuery">
            <value>
                <![CDATA[
                    WITH RECURSIVE children AS (
	                    SELECT
		                    d.datastorage_id,
                            d.datastorage_name,
                            d.description,
                            d.datastorage_type,
                            d.path,
                            d.datastorage_root_id,
                            d.sts_duration,
                            d.lts_duration,
                            d.incomplete_upload_cleanup_days,
                            d.created_date,
                            d.owner,
                            d.enable_versioning,
                            d.backup_duration,
                            d.locked as datastorage_locked,
                            d.mount_point,
                            d.mount_options,
                            d.shared,
                            d.allowed_cidrs,
                            d.region_id as region_id,
                            d.file_share_mount_id,
                            d.sensitive,
                            d.mount_disabled,
                            d.s3_kms_key_arn,
                            d.s3_use_assumed_creds,
                            d.s3_temp_creds_role,
                            d.mount_status,
                            d.source_datastorage_id,
                            d.masking_rules,
                            c.folder_id,
                            c.parent_id AS parent_folder_id
	                    FROM pipeline.datastorage d
	                    LEFT JOIN pipeline.folder c ON d.folder_id = c.folder_id
	                    WHERE d.datastorage_id IN
	                        (SELECT datastorage_id
	                        FROM pipeline.datastorage
	                        ORDER BY datastorage_id
	                        LIMIT @LIMIT@ OFFSET @OFFSET@)
	                    UNION
	                    SELECT
		                    null as datastorage_id,
                            null as datastorage_name,
                            null as description,
                            null as datastorage_type,
                            null as path,
                            null as datastorage_root_id,
                            null as sts_duration,
                            null as lts_duration,
                            null as incomplete_upload_cleanup_days,
                            null as created_date,
                            null as owner,
                            null as enable_versioning,
                            null as backup_duration,
                            null as datastorage_locked,
                            null as mount_point,
                            null as mount_options,
                            null as shared,
                            null as allowed_cidrs,
                            null as region_id,
                            null as file_share_mount_id,
                            null as sensitive,
                            null as mount_disabled,
                            null as s3_kms_key_arn,
                            null as s3_use_assumed_creds,
                            null as s3_temp_creds_role,
                            null as mount_status,
                            null as source_datastorage_id,
                            null as masking_rules,
		                    m.folder_id,
                            m.parent_id AS parent_folder_id
	                    FROM pipeline.folder m
	                    INNER JOIN children t ON t.parent_folder_id = m.folder_id
	                ) SELECT * FROM children;
                ]]>
            </value>
        </property>
        <property name="loadStorageWithParentsQuery">
            <value>
                <![CDATA[
                    WITH RECURSIVE children AS (
	                    SELECT
		                    d.datastorage_id,
                            d.datastorage_name,
                            d.description,
                            d.datastorage_type,
                            d.path,
                            d.datastorage_root_id,
                            d.sts_duration,
                            d.lts_duration,
                            d.incomplete_upload_cleanup_days,
                            d.created_date,
                            d.owner,
                            d.enable_versioning,
                            d.backup_duration,
                            d.locked as datastorage_locked,
                            d.mount_point,
                            d.mount_options,
                            d.shared,
                            d.allowed_cidrs,
                            d.region_id as region_id,
                            d.file_share_mount_id,
                            d.sensitive,
                            d.mount_disabled,
                            d.s3_kms_key_arn,
                            d.s3_use_assumed_creds,
                            d.s3_temp_creds_role,
                            d.mount_status,
                            d.source_datastorage_id,
                            d.masking_rules,
                            c.folder_id,
                            c.parent_id AS parent_folder_id
	                    FROM pipeline.datastorage d
	                    LEFT JOIN pipeline.folder c ON d.folder_id = c.folder_id
	                    WHERE d.datastorage_id = ?
	                    UNION
	                    SELECT
		                    null as datastorage_id,
                            null as datastorage_name,
                            null as description,
                            null as datastorage_type,
                            null as path,
                            null as datastorage_root_id,
                            null as sts_duration,
                            null as lts_duration,
                            null as incomplete_upload_cleanup_days,
                            null as created_date,
                            null as owner,
                            null as enable_versioning,
                            null as backup_duration,
                            null as datastorage_locked,
                            null as mount_point,
                            null as mount_options,
                            null as shared,
                            null as allowed_cidrs,
                            null as region_id,
                            null as file_share_mount_id,
                            null as sensitive,
                            null as mount_disabled,
                            null as s3_kms_key_arn,
                            null as s3_use_assumed_creds,
                            null as s3_temp_creds_role,
                            null as mount_status,
                            null as source_datastorage_id,
                            null as masking_rules,
		                    m.folder_id,
                            m.parent_id AS parent_folder_id
	                    FROM pipeline.folder m
	                    INNER JOIN children t ON t.parent_folder_id = m.folder_id
	                ) SELECT * FROM children;
                ]]>
            </value>
        </property>
        <property name="loadDataStorageRootQuery">
            <value>
                <![CDATA[
                    SELECT r.datastorage_root_id, r.datastorage_root_path
                    FROM pipeline.datastorage_root r
                    WHERE r.datastorage_root_path = :DATASTORAGE_ROOT_PATH
                ]]>
            </value>
        </property>
        <property name="addToolVersionToMountQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.datastorage_tool_version(datastorage_id, tool_id, tool_version_id)
                    VALUES (:DATASTORAGE_ID, :TOOL_ID, :TOOL_VERSION_ID);
                ]]>
            </value>
        </property>
        <property name="deleteToolsToMountQuery">
            <value>
                <![CDATA[
                    DELETE FROM pipeline.datastorage_tool_version AS dtv
                    WHERE dtv.datastorage_id = ?;
                ]]>
            </value>
        </property>
        <property name="loadToolsToMountQuery">
            <value>
                <![CDATA[
                    SELECT
                        dtv.tool_id,
                        tool_version_id,
                        tv.version as TOOL_VERSION,
                        t.image AS TOOL_IMAGE,
                        dr.path AS TOOL_REGISTRY
                    FROM pipeline.datastorage_tool_version AS dtv
                    INNER JOIN pipeline.tool t ON t.id = dtv.tool_id
                    INNER JOIN pipeline.docker_registry dr ON t.registry_id = dr.id
                    LEFT JOIN pipeline.tool_version tv ON tv.id = tool_version_id
                    WHERE dtv.datastorage_id = ?
                ]]>
            </value>
        </property>
        <property name="loadToolsToMountByIdsQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        dtv.tool_id,
                        tool_version_id,
                        tv.version as TOOL_VERSION,
                        t.image AS TOOL_IMAGE,
                        dr.path AS TOOL_REGISTRY
                    FROM pipeline.datastorage_tool_version AS dtv
                    INNER JOIN pipeline.tool t ON t.id = dtv.tool_id
                    INNER JOIN pipeline.docker_registry dr ON t.registry_id = dr.id
                    LEFT JOIN pipeline.tool_version tv ON tv.id = tool_version_id
                    WHERE dtv.datastorage_id IN (:DATASTORAGE_IDS)
                ]]>
            </value>
        </property>
        <property name="loadToolsToMountsForAllStoragesQuery">
            <value>
                <![CDATA[
                    SELECT
                        datastorage_id,
                        dtv.tool_id,
                        tool_version_id,
                        tv.version as TOOL_VERSION,
                        t.image AS TOOL_IMAGE,
                        dr.path AS TOOL_REGISTRY
                    FROM pipeline.datastorage_tool_version AS dtv
                    INNER JOIN pipeline.tool t ON t.id = dtv.tool_id
                    INNER JOIN pipeline.docker_registry dr ON t.registry_id = dr.id
                    LEFT JOIN pipeline.tool_version tv ON tv.id = tool_version_id
                ]]>
            </value>
        </property>
        <property name="createDataStorageRootQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.datastorage_root (datastorage_root_path)
                    VALUES (:DATASTORAGE_ROOT_PATH)
                    ON CONFLICT (datastorage_root_path) 
                    DO NOTHING;
                ]]>
            </value>
        </property>
        <property name="updateDataStorageMountStatusQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.datastorage SET
                        mount_status = :MOUNT_STATUS
                    WHERE
                        datastorage_id = :DATASTORAGE_ID
                ]]>
            </value>
        </property>
    </bean>
</beans>
