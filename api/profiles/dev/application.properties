#tomcat configuration
server.port=9999
server.context-path=/pipeline
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=text/html,text/xml,application/json,application/javascript
server.connection-timeout=20000
server.api.token=
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.force-response=true

#db configuration
database.url=jdbc:postgresql://localhost:5432/pipeline
database.username=pipeline
database.password=pipeline
database.driverClass=org.postgresql.Driver
database.max.pool.size=10
database.initial.pool.size=5

#monitoring Elaticsearch configuration
monitoring.elasticsearch.url=
monitoring.elasticsearch.port=80

#flyway configuration
flyway.sql-migration-prefix=v
flyway.locations=classpath:db/migration
flyway.schemas=pipeline
flyway.placeholders.default.admin=
flyway.placeholders.default.admin.id=1

#sso config
server.ssl.enabled-protocols=TLSv1.1,TLSv1.2
server.ssl.ciphers=HIGH:!RC4:!aNULL:!MD5:!kEDH
server.ssl.key-store=
server.ssl.metadata=
server.ssl.key-store-password=
server.ssl.keyAlias=pipe-cert-ssl
saml.sign.key=api-saml-cert-ss
server.ssl.endpoint.id=
saml.authn.request.binding=urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
saml.authorities.attribute.names=http://schemas.xmlsoap.org/ws/2005/05/identity/claims/tokenGroups
saml.user.attributes=Email=http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress,Name=http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
saml.user.auto.create=false

#applicaion configuration
working.directory=

#run.pipeline.init.task.name=InitializeEnvironment
#commit run scripts
commit.run.scripts.root.url=
commit.run.script.starter.url=
docker.registry.login.script=

#pause/resume run scripts
pause.run.script.url=
pause.pool.size=3

#luigi
kube.namespace=default
luigi.graph.script=

#git
git.src.directory=src/
git.docs.directory=docs/

#s3 bucket policy
# in bytes
storage.clone.name.suffix=storage

#cluster management

#AWS Scripts
cluster.nodeup.script=
cluster.nodedown.script=
cluster.reassign.script=
cluster.node.terminate.script=

#Azure Scripts
cluster.azure.nodeup.script=
cluster.azure.nodedown.script=
cluster.azure.reassign.script=
cluster.azure.node.terminate.script=

#GCP Scripts
cluster.gcp.nodeup.script=
cluster.gcp.nodedown.script=
cluster.gcp.reassign.script=
cluster.gcp.node.terminate.script=

cluster.networks.config=
cluster.cadvisor.port=4194
cluster.cadvisor.request.period=15
cluster.cadvisor.timeout=10

api.host=
launch.script.url=
jwt.key.public=
jwt.key.private=
kube.edge.label=EDGE
kube.edge.ip.label=
kube.edge.port.label=
kube.master.ip=
kube.kubeadm.token=
kube.protected.node.labels=cloud-pipeline/role=EDGE

#templates
templates.directory=
templates.default.template=
templates.folder.directory=

# Tool's Security Policy options.
# Denies running a Tool, if the number of it's vulnerabilities exceeds the threshold. To disable the policy, set to -1

# Root mount point for mounting NFS file systems. Must be a directory, where pipeline's user has write access
data.storage.nfs.root.mount.point=
# Mount options for NFS
data.storage.nfs.options.rsize=1048576
data.storage.nfs.options.wsize=1048576

# Enables logging filter using CommonsRequestLoggingFilter
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

#Firecloud
firecloud.auth.client.id=
firecloud.auth.client.secret=