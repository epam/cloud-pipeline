#!/bin/bash

# Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

EFA_SETUP_TASK=EFASupport

function log_efa_event() {
  _msg="$1"
  _log_type="INFO"
  if [ "$2" ]; then
      _log_type="$2"
  fi

  echo "$_msg" >> /var/log/efa-install.log

  if [ "$_log_type" == "WARN" ]; then
    pipe_log_warn "$_msg" "$EFA_SETUP_TASK"
  elif [ "$_log_type" == "ERROR" ]; then
    pipe_log_fail "$_msg" "$EFA_SETUP_TASK"
  elif [ "$_log_type" == "SUCCESS" ]; then
    pipe_log_success "$_msg" "$EFA_SETUP_TASK"
  else
    pipe_log_info "$_msg" "$EFA_SETUP_TASK"
  fi
}

log_efa_event "Started AWS EFA Driver setup"

if [ -z "$CP_USE_HOST_NETWORK" ]; then
  log_efa_event "CP_USE_HOST_NETWORK is not set. EFA capability may work unexpectedly or doesn't work at all!" "WARN"
fi

if [ -z "$CP_NODE_SSH_PORT" ]; then
  log_efa_event "CP_NODE_SSH_PORT is not set. EFA capability may work unexpectedly or doesn't work at all!" "WARN"
  if [ "$CP_USE_HOST_NETWORK" != "" ]; then
    log_efa_event "CP_USE_HOST_NETWORK is set, but CP_NODE_SSH_PORT doesn't, so ssh to the run can be misconfigured and doesn't work!" "WARN"
  fi
fi

if [ -z "$CP_CAP_TARGET_SUBNET_ID" ]; then
  log_efa_event "CP_CAP_TARGET_SUBNET_ID is not set. EFA capability may work unexpectedly or doesn't work at all!" "WARN"
fi

if [ -z "$CP_CAP_TARGET_SECURITY_GROUPS" ]; then
  log_efa_event "CP_CAP_TARGET_SECURITY_GROUPS is not set. EFA capability may work unexpectedly or doesn't work at all!" "WARN"
fi

if [ "$CP_CAP_EFA_INSTALLED" != "true" ]; then
  log_efa_event "Proceeding with EFA installation..."
  if [ -z "$CP_CAP_EFA_ADDITIONAL_ARGS" ]; then
    log_efa_event "CP_CAP_EFA_ADDITIONAL_ARGS is not set. will use default configuration!"
    export CP_CAP_EFA_ADDITIONAL_ARGS="--skip-kmod --skip-limit-conf --no-verify"
  fi
  log_efa_event "Setting CP_CAP_EFA_ADDITIONAL_ARGS to: '$CP_CAP_EFA_ADDITIONAL_ARGS'."

  EFA_SETUP_DIR="/opt/"

  cd $EFA_SETUP_DIR
  curl -O "${GLOBAL_DISTRIBUTION_URL}tools/efa/aws-efa-installer-1.21.0.tar.gz" \
      && tar -xf aws-efa-installer-1.21.0.tar.gz \
      && rm -rf aws-efa-installer-1.21.0.tar.gz \
      && cd aws-efa-installer \
      && ./efa_installer.sh -y $CP_CAP_EFA_ADDITIONAL_ARGS &>> /var/log/efa-install.log

  if [ $? -ne 0 ]; then
    log_efa_event "Problems with installing EFA Driver" "ERROR"
    exit 1
  fi
else
  log_efa_event "CP_CAP_EFA_INSTALLED is set to $CP_CAP_EFA_INSTALLED, proceeding without installation"
fi


log_efa_event "Checking EFA connectivity..."
/opt/amazon/efa/bin/fi_info -p efa -t FI_EP_RDM &>> /var/log/efa-install.log
if [ $? -ne 0 ]; then
  log_efa_event "Problems with checking EFA Driver after installation" "ERROR"
  exit 1
fi

log_efa_event "AWS EFA successfully installed" "SUCCESS"
