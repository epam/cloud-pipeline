#
# Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# general error messages
error.default=Your operation has been aborted as we encountered a server problem.
error.null.param=Error: the required parameter ''{0}'' is null or empty
error.parameter.required=Parameter ''{0}'' id required for ''{1}'' podId.
error.parent.required=Error: parent required
error.too.many.results=Error: too many results for ''{0}''. Should return exactly one record.
error.unsupported.operation=Error: Can not perform operation with ''{0}''.

# SQL errors
error.sql=Your operation has been aborted due to SQL error.
error.sql.bad.grammar=Your operation has been aborted due to incorrect grammar of a query.

# logger
logger.error=This operation has been aborted: {0}.
logger.error.root.cause=This operation has been aborted: {0}. The root cause is:

# IO
error.io.not.found=Your operation has been aborted due to damaged or missed underlying resources used to manage data.

# Pipelines
error.pipeline.not.found=Pipeline with requested id: ''{0}'' was not found.
error.pipeline.name.is.empty=Pipeline name is required.
error.pipeline.with.url.not.found=Pipeline with requested repository URL: ''{0}'' was not found.
error.pipeline.document.property.not.found=Pipeline document property ''{0}'' for pipeline id {1} was not found.
error.pipeline.token.is.invalid=Cannot access repository {0}: ''{1}''. Check provided token.
error.pipeline.name.exists=''{0}'' already exists in repository.
error.pipeline.name.invalid=Pipeline name ''{0}'' contains invalid characters.
error.pipeline.revision.name.invalid=Pipeline revision name ''{0}'' contains invalid characters.

# Pipeline Config
error.pipeline.config.invalid=Provided configuration is invalid. At least name and pipeline or command should be specified.
error.pipeline.config.name.required=Name is required to change configuration.
error.pipeline.config.default.set=Only one default configuration is allowed. Current default configuration is ''{0}''.
info.pipeline.config.update=Configuration ''{0}'' update.
error.pipeline.config.not.found=Failed to find configuration by name ''{0}''.
error.pipeline.config.name.exists=Configuration name ''{0}'' already exists.
info.pipeline.config.delete=Configuration ''{0}'' delete.
info.pipeline.config.rename=Renaming configuration from  ''{0}'' to  ''{1}''.
error.exceed.max.runs.count=Error: exceeded allowed number of scheduled at once runs: allowed ''{0}'', but actual ''{1}''
error.pipeline.config.name.invalid=Configuration name ''{0}'' contains invalid characters.
error.proxy.security.config.missing=Property 'data.sharing.proxy.endpoint.id' and 'data.sharing.proxy.metadata' should be set to allow Proxy authentication

# Run configurations
error.run.config.not.found=Failed to find run configuration by identifier ''{0}''.
error.run.config.name.duplicates=Duplicate entry names are not allowed in configuration.

#Folders
error.folder.not.found=Folder with requested id: ''{0}'' was not found.
error.folder.name.empty=Name is required to create a folder.
error.folder.name.exists=Folder with name ''{0}'' already exists in parent folder with id ''{1}''.
error.folder.is.used=Folder ''{0}'' has children {1}: {2}.
error.folder.used.folders=Folder ''{0}'' has child folders: {1}.
error.folder.used.storages=Folder ''{0}'' has child storages: {1}.
error.folder.recursive.deps=Cannot move folder with id ''{0}'' to folder with id ''{0}'' since it creates recursive dependency.
folder.project.not.found=Can not detect project folder: project folder not found
error.folder.template.not.found=Folder template ''{0}'' not found
error.template.folder.name.empty=Name is required to create a folder from template ''{0}''.
error.folder.template.invalid=Failed to read folder template: ''{0}''.
error.invalid.folder.name=Folder name ''{0}'' contains invalid characters.
error.invalid.folder.id=Folder ids should be the same for all entities from the list.

# Pipeline runs
error.wrong.run.status.update=Error: pipeline run stats cannot be updated to ''{0}''
error.run.parameter.required=Parameter ''{0}'' is required to run ''{1}'' pipeline.
error.run.pipelines.not.found=Pipeline runs with requested ids: ''{0}'' were not found.
error.run.pipeline.commit.failed=Process of the commit of the run ''{0}'' via ssh failed!
error.container.id.for.run.not.found=Container id for run ''{0}'' not found!
error.pipeline.run.finished=Pipeline run with id: ''{0}'' already finished.
error.pipeline.run.not.stopped=Pipeline run with id: ''{0}'' not stopped.
error.pipeline.run.not.running=Run {0} shall be in 'RUNNING' status to perform this operation.
warn.commit.timeout.has.expired=Pipeline commit status ''{0}'' {1} past from last update. Set status to ''{2}''
info.execute.ssh.run.pipeline.command=Execute ''{0}'' ssh command for instance.
error.run.pipeline.pause.failed=Pause process of the run ''{0}'' via ssh failed!
error.run.pipeline.resume.failed=Resume process of the run ''{0}'' via ssh failed!
error.instance.not.found=Instance not found for pipeline run ''{0}''.
error.instance.id.not.found=Instance id not found for pipeline run ''{0}''.
error.pod.id.not.found=Pod id not found for pipeline run ''{0}''.
error.docker.image.not.found=Docker image not found for pipeline run ''{0}''.
error.pipeline.run.id.not.found=Pipeline run id not found for pipeline run ''{0}''.
error.instance.on.demand.required=Only on-demand instance type is allowed to perform pause/resume operation.
error.instance.ip.not.found=Instance ip not found for pipeline run ''{0}''.
error.actual.cmd.not.found=Actual command not found for pipeline run ''{0}''.
error.pipeline.run.not.initialized=Pipeline run ''{0}'' should be initialized.
error.pipeline.run.pretty.url.in.use=Url ''{0}'' is already used for run ''{1}''.
error.exceed.max.restart.run.count=Error: exceeded allowed number of restart for run ''{0}''.
error.get.node.stat=Failed to get node stat for node ''{0}''
error.run.instance.disk.not.enough=Not enough instance disk to save docker images.
error.cmd.template.not.resolved=No cmd template was resolved for the run.
error.run.termination.wrong.status=Only paused runs can be terminated. Given run ''{0}'' has ''{1}'' status.
warn.resume.run.failed=Could not resume run. Operation failed with message ''{0}''
info.instance.started=Instance ''{0}'' successfully started.

#Tools
error.tool.not.found=Tool with requested id: ''{0}'' was not found.
error.tool.already.exists=Tool with image ''{0}'' already exists in group ''{1}''
error.tool.invalid.image=Tool image ''{0}'' does not match expected format.
error.tool.already.exists.in.registry=Tool with image ''{0}'' already exists in registry ''{1}''
error.number.of.tools.with.image.greater.then.one=There are several repository with this tool: ''{0}''
error.tool.icon.not.found=Icon for tool with specified ID: {0} not found
error.tool.icon.too.large=Icon uploaded is too large: {0}, {1} allowed
error.tool.version.invalid.size=Size is not available for tool ''{0}''

# Tool groups
error.tool.group.already.exists=Tool group ''{0}'' already exists in registry ''{1}''
error.tool.group.not.found=Tool group with requested id: ''{0}'' was not found.
error.tool.group.is.not.provided=Tool group is not provided in path ''{0}''
error.tool.group.by.name.not.found=Tool group with requested name: ''{0}'' was not found.

error.private.tool.group.not.found=Private Tool Group was not found in the requested registry ''{0}''.
error.tool.copy.between.registries=Cannot copy tools between registries
error.tool.image.unavailable=Tool image ''{0}'' does not exist in docker registry.
error.tool.group.not.empty=Tool group ''{0}'' is not empty. Pass force flag to delete tool group with all child tools.

# Docker Registry
error.registry.not.found=Registry with name ''{0}'' not found
error.registry.already.exists=Registry with name ''{0}'' already exists
error.registry.script.unavailable=Template script for docker client is unavailable.
error.registry.could.not.get.manifest=Could not get manifest for image ''{0}''
debug.docker.registry.auto.enable=Tool with name ''{0}'' will be automatically enabled by docker registry notification.
debug.docker.registry.auto.enable.success=Tool with name ''{0}'' successfully enabled by docker registry notification.
error.docker.registry.no.external=Docker registry ''{0}'' does not have external URL.
error.docker.registry.authentication.required=Authentication is required to generate docker registry jwt token.

# Docker Registry access
error.registry.unauthorized=Authorization failed for registry ''{0}''.
error.registry.not.allowed=User {0} is not allowed to access registry {1}
error.registry.action.not.allowed=Action {0} is not allowed for user {1} in registry {2}

# Monitoring
debug.monitor.check.running=Checking running tasks status
debug.monitor.check.finished=Finished pod monitor cycle
info.monitor.kill.task=Killing pods for {0}
error.killer.thread.failed=Killer thread failed with an exception: {0}
error.instance.restart.state.reasons.not.found=Instance state reasons for run restart are not specified.

info.run.idle.notify=Pipeline Run {0} is idle: CPU usage: {1}, notification will be sent
info.run.idle.action=Pipeline Run {0} is idle: CPU usage: {1}, notification was already be sent. Action: {2}

# Kubernetes

error.node.not.found=Node with requested name ''{0}'' was not found.
error.node.is.protected=Node with name ''{0}'' is protected and cannot be deleted.
error.kube.token.not.found=Kube token was not found.
error.kube.master.ip.not.found=Kube master ip was not found.
error.kube.service.ip.undefined=Kubernetes service {0} external IP is not defined.
error.kube.service.port.undefined=Kubernetes service {0} port is not defined.
error.kube.node.down.timeout=Node {0} was not removed in requested period.
log.truncated=< ... Some of the preceding lines were skipped due to log size limit ...>

# Data sources messages
error.datastorage.not.found=Error: data storage with id: ''{0}'' was not found.
error.datastorage.not.found.by.name=Error: data storage with name: ''{0}'' or path: ''{1}'' was not found.
error.datastorage.already.exist=Error: data storage with name: ''{0}'' or path: ''{1}'' already exists.
error.datastorage.name.is.empty=Data storage name should not be empty.
error.datastorage.not.supported=Error: data storage (id ''{0}'') with type ''{1}'' is not supported.
error.datastorage.path.is.empty=Data storage path should not be empty.
error.datastorage.rule.not.found=Data storage rule with requested pipeline ID ''{0}'' and file mask: ''{1}'' was not found.
error.datastorage.rule.sts.or.lts.required=If short term duration is specified, long term duration is required.
error.datastorage.rule.illegal.duration=Storage duration must greater than 0. Provided value is ''{0}''.
error.datastorage.rule.illegal.duration.combination=Long term duration must be greater than short term duration. \
  Provided STS value is ''{0}'', LTS value is ''{1}''.
error.datastorage.invalid.request=At least one permission (READ or WRITE) must be requested.
error.datastorage.versioning.required=Versioning is not enabled for storage: ''{0}''.
error.datastorage.create.failed=Failed to create a new storage: ''{0}''.
error.datastorage.delete.failed=Failed to delete a storage: ''{0}''.
error.datastorage.type.not.specified=Data Storage type is not specified for data storage ''{0}''.
error.datastorage.file.tag.not.exist=Tag ''{0}'' does not exist.
error.datastorage.path.not.found=Storage path ''{0}'' for bucket ''{1}'' does not exist.
error.datastorage.path.already.exists=Storage path ''{0}'' for bucket ''{1}'' already exists.

error.datastorage.nfs.mount=Could not mount nfs ''{0}'' with path: ''{1}''
error.datastorage.nfs.mount.2=Could not mount nfs: ''{0}'' : ''{1}''
error.datastorage.nfs.mount.dir.not.created=Could not mount nfs: Could not create a directory
error.datastorage.nfs.unmount.2=Could not unmount nfs: ''{0}'' : ''{1}''
error.datastorage.nfs.create.folder=Could not create a folder in nfs: {0}
error.datastorage.nfs.create.file=Could not create a file in nfs: {0}
error.datastorage.nfs.delete.directory=Could not delete directory
error.datastorage.nfs.path.not.found=Could not create NFS type data storage ''{0}'' with empty 'path' field.
error.datastorage.forbidden.mount.point=Could not create nfs datastorage ''{0}'', mount point ''{1}'' is in black list!
error.datastorage.is.not.shared=Datastorage with id ''{0}'' is not a shared datastorage!
error.shared.root.url.is.not.set=Preference 'data.sharing.base.api' must be set to enable shared URL generation
error.datastorage.cannot.set.file.permission=Cannot set permission for file on NFS datastorage ''{0}''
error.datastorage.is.used.default=Datastorage with id ''{0}'' is used as default storage for ''{1}'' with ids: ''{2}''.

error.datastorage.path.invalid.schema=The specified path ''{0}'' has incorrect scheme. Expected path schema: ''{1}''.
error.datastorage.path.processing.error=An error occurred during processing path ''{0}'': ''{1}''.

# Git messages

error.repository.file.was.updated=Error: cannot modify file or folder ''{0}''. Select new version to incorporate your changes.
error.repository.was.updated=Error: cannot modify current version. Select new version to incorporate your changes.
error.repository.folder.not.found=Error: folder ''{0}'' not found.
error.repository.folder.already.exists=Error: folder ''{0}'' already exists.
error.repository.folder.cannot.be.removed=Error: folder ''{0}'' cannot be removed.
error.repository.root.folder.cannot.be.removed=Error: root folder cannot be removed.
error.pipeline.file.name.invalid=File name ''{0}'' contains invalid characters.
error.repository.indexing.disabled=Error: repository indexing is disabled.

# Instance offers expiration check messages

instance.offers.expiration.check.running=Checking instances offers expiration status.
instance.offers.expiration.check.done=Done checking instances offers expiration status.
instance.offers.expired=Instance offers are expired or missing.
instance.offers.update.started=Updating instance offers list...
instance.offers.update.finished=Instance offers list updated.
instance.offers.updated={0} offers are inserted.
instance.type.not.allowed=Instance type ''{0}'' is not allowed.
price.type.not.allowed=Price type ''{0}'' is not allowed.
instance.disk.invalid=Instance disk value must be a positive integer. Actual value is ''{0}''. 

setting.is.not.provided=Setting ''{0}'' is not provided

cloud.bucket.already.exists=Bucket with this name already exists: '{0}'

cadvisor.send.request=Get next batch of statistics for the node with IP ''{0}''
cadvisor.receive.response=Receive result from cAdvisor for the node with IP ''{0}''

# Users and security
user.id.not.found=Failed to find user by id ''{0}''.
user.list.is.empty="Users list should not be empty.
user.name.not.found=Failed to find user by name ''{0}''.
user.name.exists=User with name ''{0}'' already exists.
user.name.required=User name is required.
role.id.not.found=Failed to find role by id ''{0}''.
role.name.not.found=Failed to find role by name ''{0}''.
role.name.is.required=Role name is required to create a role.
role.name.exists=Role with name ''{0}'' already exists.
user.prefix.required=At least one symbol is required to search for users.
unsupported.security.class=Granting permissions for class ''{0}'' is not supported.
permission.param.is.required=Parameter ''{0}'' is required to set permissions.
error.permission.is.not.granted=Permission is not granted for ''{0}'' on ''{1}''
error.entity.is.locked=''{0}'' with id ''{1}'' is locked from changes.
error.mutable.acl.return=MutableAcl should be been returned

# Metadata
error.metadata.not.found=Error: metadata for id ''{0}'' and class ''{1}'' not found.
error.invalid.metadata.entity.id=Error: invalid metadata entity id: ''{0}''.
error.invalid.metadata.entity.class=Error: invalid metadata entity class: ''{0}''.
error.invalid.metadata=Error: invalid metadata: ''{0}''.
error.invalid.metadata.filter=Invalid metadata filter request parameter ''{0}'' value ''{1}''.
error.metadata.entity.not.found=Metadata entity with id ''{0}'' is not found.
error.metadata.update.key.not.found=One and only one key should be passed to "updateKey" method. Actual number of passed keys: ''{0}''.
error.metadata.entity.class.not.found=Failed to found metadata class by identifier: ''{0}''.
error.metadata.upload.changed.type=Type ''{0}'' for field ''{1}'' does not match already present type ''{2}''.
error.metadata.entities.not.found=Metadata entities ids must be specified.
error.metadata.entity.writing.bad.encoding=Written metadata encoding differs with UTF-8.
error.metadata.entity.writing.unsupported.format=File format ''{0}'' is not supported.
error.metadata.entity.class.not.found.in.folder=Folder ''{0}'' does not contain any metadata entities with ''{1}'' class.
error.entity.for.metadata.not.found=Entity with requested ID ''{0}'' and class ''{1}'' was not found
error.entity.for.metadata.not.specified=Entity ID and entity class is required for metadata

#Paging
error.page.index=Page index should be greater than 0.
error.page.size=Page size should be greater than 0.
error.invalid.page.index.size=Invalid page size or page index: page size - ''{0}'', page index - ''{1}''.

# Base Entities
error.class.not.supported=Provided entity class ''{0}'' is not supported
error.entity.not.found=Error: entity with id ''{0}'' and class ''{1}'' was not found.
error.invalid.entity.class=Error: invalid entity class. Expected class ID ''{0}'', actual class ID ''{1}''.

#Paramteres
error.parameter.missing.reference=Unable to resolve parameter ''{0}''. Referenced entity with class ''{1}'' and external_id ''{2}'' doesn't exist.
error.parameter.missing.value=Unable to resolve parameter ''{0}''. Referenced entity does not have specified field ''{1}''.
error.parameter.non.reference.type=Unable to resolve parameter value ''{0}''. Scalar value for field ''{1}'' is used as a reference type.
error.parameter.non.scalar.type=Unable to resolve parameter value ''{0}''. Reference value for field ''{1}'' is used as a parameter value.
error.parameter.invalid.array=Unable to resolve parameter value ''{0}''. Invalid array value ''{1}'' for field ''{2}''.
error.expression.invalid.format=Expansion expression must start from "this." prefix. Actual value: ''{0}''.

#System notifications
error.notification.not.found=Notification #{0} was not found
error.notification.title.required=Notification title is required
info.notification.submitted=Notification was submitted with parameters: {0}

#Pipeline notification
error.notification.settings.not.found=Notification with id: {0} not found or disabled
info.notification.template.not.configured=No template configured for {0} notification or notification was disabled!
error.template.id.should.be.equal.to.type=Notification template id should be equal to notification type id ({0}), but was ''{1}''
error.notification.subject.not.specified=Notification subject is not specified
error.notification.body.not.specified=Notification body is not specified
error.notification.receiver.not.specified=Notification receiver is not specified

# Tool Security Scan messages
error.tool.scan.failed=Tool security scan failed for tool ''{0}:{1}''
error.update.tool.version.failed=Updating tool version failed for tool ''{0}:{1}''
info.tool.scan.registry.started=Tool security scan started for registry ''{0}''
info.tool.scan.scheduled.started=Scheduled Tool security scan started
info.tool.scan.scheduled.done=Scheduled Tool security scan done
info.tool.scan.force.started=Force tool security scan started for tool ''{0}''
info.tool.scan.already.scanned=Tool ''{0}'' already scanned, refreshing vulnerability data
info.tool.scan.new.layers=Tool ''{0}'' with version ''{1}'' has new layers and will be updated, last ref ''{2}'' , docker ref ''{3}''.
error.tool.scan.disabled=Tool security scanning is disabled
error.tool.security.policy.violation=Tool execution is not allowed by a Security Policy

# Preference
error.preference.name.not.specified=No name is specified for preference
error.preference.with.name.not.found=Preference with name ''{0}'' not found
error.preference.with.name.has.different.type=Preference with name ''{0}'' has different type: ''{1}''
error.preference.value.invalid=Preference ''{0}'' contains invalid value ''{1}''
error.preference.requirements.not.met=Preference ''{0}'' requires the following valid preferences to be set: ''{1}''
error.preference.type.not.specified=No preference type specified
info.preference.update.with.additional.tasks=Preference ''{0}'' was updated with a new value ''{1}''. Additional tasks \
  to be performed: {2}

#Issues
error.issue.not.found=Issue with requested ID ''{0}'' was not found
error.invalid.issue.parameters=Issue parameters is invalid or does not specified
error.invalid.issue.name=Issue name is invalid or does not specified
error.invalid.issue.status=Issue status is invalid or does not specified
error.invalid.issue.entity.parameters=Entity for issue is invalid or does not specified
error.invalid.issue.entity.id=Entity ID for issue is invalid or does not specified
error.invalid.issue.entity.class=Entity class for issue is invalid or does not specified
error.invalid.issue.text=Issue content text is invalid or does not specified
error.issue.status.is.closed=Issue is already closed
error.comment.not.found=Issue comment with requested ID ''{0}'' was not found
error.invalid.comment.text=Comment content text is invalid or does not specified
error.wrong.issue.id.or.comment.id=Comment with requested issue ID ''{0}'' and comment ID ''{1}'' was not found
error.attachment.not.found=Attachment with required ID: ''{0}'' not found
error.attachment.system.data.storage.not.configured=System data storage must be configured to allow uploading attachments

#Google and Firecloud
error.google.credentials=An error occurred during Google authorization: {0}.
error.google.auth.code.missing=An error during Google Authorization: Google authorization code is not provided.
error.google.scopes.missing=An error during Google Authorization: Google API Scopes are not defined.
error.google.redirect.uri.missing=An error during Google Authorization: Google Redirect URL is not defined.
error.google.secret.json.missing=An error during Google Authorization: Google Web Client secret json is not defined.
error.google.secret.json.invalid=An error during Google Authorization: Failed to read Google secret json file.
error.firecloud.request.failed=Request to Firecloud returned status {0} with message ''{1}''.

#DTS
error.dts.registry.does.not.exist=Cannot find required DTS registry with ID ''{0}''.
error.dts.registry.is.empty=DTS registry must be specified.
error.dts.registry.url.is.empty=URL is required for DTS registry.
error.dts.registry.prefixes.are.empty=Prefixes are required for DTS registry.
error.dts.registry.id.is.empty=DTS registry ID must be specified.
error.dts.registry.name.is.empty=DTS registry NAME must be specified.
error.dts.registry.not.schedulable= DTS ''{0}' does not support jobs scheduling.

#Cloud region
error.region.not.found=Cloud region with requested id: ''{0}'' was not found.
error.region.credentials.not.found=Cloud region credentials for region with requested id: ''{0}'' were not found.
error.region.default.undefined=Default region is not defined. Set default region or specify region explicitly.
error.region.name.missing=Cloud region name is missing.
error.region.provider.mismatch=Actual cloud region provider {0} does not match expected one {1}.
error.region.regionid.missing=Cloud region id is missing.
error.region.regionid.invalid=Cloud region id ''{0}'' is invalid.
error.region.json.writing.failed=Error occurred while writing as json the following object: {0}.
error.region.cors.rules.invalid=Cloud region has invalid cors rules: {0}.
error.region.policy.invalid=Cloud region has invalid policy: {0}.

#Contextual preference
error.contextual.preference.not.found=Contextual preference with one of the given names ''{0}'' and \
  external resource ''{1}'' was not found.
error.contextual.preference.name.missing=Contextual preference name is missing.
error.contextual.preference.names.missing=Contextual preference names list are missing.
error.contextual.preference.names.empty=Contextual preference names list should not be empty.
error.contextual.preference.value.missing=Contextual preference value is missing.
error.contextual.preference.value.invalid=Contextual preference value ''{0}'' does not suit given type ''{1}''.
error.contextual.preference.type.missing=Contextual preference type is missing.
error.contextual.preference.type.invalid=Contextual preference type ''{0}'' differs with the expected one: ''{1}''.
error.contextual.preference.external.resource.missing=Contextual preference external resource is missing.
error.contextual.preference.external.resource.level.missing=Contextual preference external resource level is missing.
error.save.contextual.preference.external.resource.level.invalid=Contextual preference external resource level should not be SYSTEM.
error.search.contextual.preference.external.resource.level.invalid=Contextual preference external resource level should be TOOL.
error.contextual.preference.external.resource.id.missing=Contextual preference external resource id is missing.
error.contextual.preference.external.resource.not.found=Contextual preference external resource ''{0}'' was not found.
warn.contextual.preference.reducer.not.found=Contextual preferences reducing failed because appropriate reducer wasn''t found. \
  Reducing preferences: {0}.
warn.contextual.preference.reducing.failed=Contextual preferences reducing failed because some of the preferences have \
  different levels or types. Expected preferences like: {0}, but there are some different preferences: {1}.


#Common cloud
error.cloud.provider.not.supported=Unsupported cloud provider: {0}.

#Azure
error.azure.storage.account.required=Storage account must be specified.
error.azure.storage.key.required=Storage account key must be specified.
error.azure.instance.not.found=Failed to find Azure instance with id {0}.
error.azure.instance.not.running=Azure instance {0} is not in active state. Current state: {1}.
error.datastorage.azure.invalid.account.key=Azure account key for account name ''{0}'' is invalid.
error.datastorage.azure.create.file=Could not create a file in azure: {0}.

#GCP
error.gcp.project.required=Project id must be specified for GCP region.
error.gcp.ssh.key.required=Path to public SSH key must be specified for GCP region.
error.gcp.impersonate.account=Impersonated account for temporary credentials must be specified.

error.gcp.instance.not.running=GCP instance ''{0}'' is not in active state. Current state: ''{1}''
error.gcp.instance.not.found=Instance with label ''{0}'' not found!

