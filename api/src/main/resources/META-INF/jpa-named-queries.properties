StoragePermissionRepository.findPermissions = \
SELECT * \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND ((p.datastorage_type = (:datastorage_type)\\:\\:datastorage_item_type AND p.datastorage_path = :datastorage_path) \
    OR (p.datastorage_type = 'FOLDER' AND p.datastorage_path in :datastorage_parent_paths)) \
AND ((p.sid_type = 'USER' AND p.sid_name = :user_sid_name) \
    OR (p.sid_type = 'GROUP' AND p.sid_name in :group_sid_names))

StoragePermissionRepository.findImmediateChildPermissions = \
SELECT * \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND (length(:datastorage_path) = 0 \
    AND p.datastorage_path NOT LIKE '%/%' \
    OR p.datastorage_path LIKE :datastorage_path || '/%' \
    AND p.datastorage_path NOT LIKE :datastorage_path || '/%/%') \
AND (p.sid_type = 'USER' AND p.sid_name = :user_sid_name \
    OR p.sid_type = 'GROUP' AND p.sid_name in :group_sid_names)

StoragePermissionRepository.findReadAllowedImmediateChildItems = \
SELECT DISTINCT ON (p.datastorage_path) \
    p.datastorage_path as datastorage_path, \
    CASE \
        WHEN length(substr(p.datastorage_child_path, length(p.datastorage_path) + 1)) = 0 \
        THEN p.datastorage_child_type \
        ELSE 'FOLDER' \
    END as datastorage_type \
FROM \
( \
    SELECT \
        (CASE WHEN length(:datastorage_path) = 0 THEN '' ELSE :datastorage_path || '/' END) || coalesce(nullif(substr(regexp_replace(p.datastorage_path, '^' || :datastorage_path || '/', ''), 0, position('/' in regexp_replace(p.datastorage_path, '^' || :datastorage_path || '/', ''))), ''), regexp_replace(p.datastorage_path, '^' || :datastorage_path || '/', '')) as datastorage_path, \
        p.datastorage_path as datastorage_child_path, \
        p.datastorage_type as datastorage_child_type \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND (length(:datastorage_path) = 0 \
        AND p.datastorage_path != '' \
        OR p.datastorage_path LIKE :datastorage_path || '/%') \
    AND ((p.sid_type = 'USER' AND p.sid_name = :user_sid_name) \
        OR (p.sid_type = 'GROUP' AND p.sid_name in :group_sid_names)) \
    GROUP BY p.datastorage_path, p.datastorage_type \
    HAVING bit_or(p.mask) & 1 = 1 \
) p \
ORDER BY 1

StoragePermissionRepository.findReadAllowedStorages = \
SELECT \
    s.datastorage_id as storage_id, \
    'DATA_STORAGE'\\:\\:varchar as storage_type \
FROM \
( \
    SELECT p.datastorage_root_id, p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE ((p.sid_type = 'USER' AND p.sid_name = :user_sid_name) \
        OR (p.sid_type = 'GROUP' AND p.sid_name in :group_sid_names)) \
    GROUP BY p.datastorage_root_id, p.datastorage_path, p.datastorage_type \
) p \
LEFT JOIN pipeline.datastorage_root r \
ON r.datastorage_root_id = p.datastorage_root_id \
LEFT JOIN pipeline.datastorage s \
ON r.datastorage_root_id = s.datastorage_root_id \
WHERE p.mask & 1 = 1 \
GROUP BY s.datastorage_id

StoragePermissionRepository.findReadAllowedStorage = \
SELECT \
    s.datastorage_id as storage_id, \
    'DATA_STORAGE'\\:\\:varchar as storage_type \
FROM \
( \
    SELECT p.datastorage_root_id, p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND ((p.sid_type = 'USER' AND p.sid_name = :user_sid_name) \
    OR (p.sid_type = 'GROUP' AND p.sid_name in :group_sid_names)) \
    GROUP BY p.datastorage_root_id, p.datastorage_path, p.datastorage_type \
) p \
LEFT JOIN pipeline.datastorage_root r \
ON r.datastorage_root_id = p.datastorage_root_id \
LEFT JOIN pipeline.datastorage s \
ON r.datastorage_root_id = s.datastorage_root_id \
WHERE s.datastorage_id = :datastorage_id \
AND p.mask & 1 = 1 \
LIMIT 1

StoragePermissionRepository.findRecursiveMask = \
SELECT \
    CASE bool_or(p.mask & 2 = 2) WHEN true THEN 2 ELSE 1 END \
    | CASE bool_or(p.mask & 8 = 8) WHEN true THEN 8 ELSE 4 END \
    | CASE bool_or(p.mask & 32 = 32) WHEN true THEN 32 ELSE 16 END as mask \
FROM \
( \
    SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND (length(:datastorage_path) = 0 \
        AND p.datastorage_path != '' \
        OR p.datastorage_path = :datastorage_path \
        AND p.datastorage_type = 'FOLDER' \
        OR p.datastorage_path LIKE :datastorage_path || '/%') \
    AND ((p.sid_type = 'USER' AND p.sid_name = :user_sid_name) \
        OR (p.sid_type = 'GROUP' AND p.sid_name in :group_sid_names)) \
    GROUP BY p.datastorage_path, p.datastorage_type \
) p

StoragePermissionRepository.copyFilePermissions = \
INSERT \
INTO pipeline.datastorage_permission ( \
    datastorage_root_id, \
    datastorage_path, \
    datastorage_type, \
    sid_name, \
    sid_type, \
    mask, \
    created \
) \
SELECT \
    p.datastorage_root_id, \
    :datastorage_new_path, \
    p.datastorage_type, \
    p.sid_name, \
    p.sid_type, \
    p.mask, \
    p.created \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND p.datastorage_type = 'FILE' \
AND p.datastorage_path = :datastorage_old_path \
ON CONFLICT (datastorage_root_id, datastorage_path, datastorage_type, sid_name, sid_type) \
DO UPDATE SET \
mask = excluded.mask, \
created = excluded.created

StoragePermissionRepository.copyFolderPermissions = \
INSERT \
INTO pipeline.datastorage_permission ( \
    datastorage_root_id, \
    datastorage_path, \
    datastorage_type, \
    sid_name, \
    sid_type, \
    mask, \
    created \
) \
SELECT \
    p.datastorage_root_id, \
    regexp_replace(p.datastorage_path, '^' || :datastorage_old_path, :datastorage_new_path) as datastorage_path, \
    p.datastorage_type, \
    p.sid_name, \
    p.sid_type, \
    p.mask, \
    p.created \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND (p.datastorage_path = :datastorage_old_path \
    OR p.datastorage_path LIKE :datastorage_old_path || '/%') \
ON CONFLICT (datastorage_root_id, datastorage_path, datastorage_type, sid_name, sid_type) \
DO UPDATE SET \
mask = excluded.mask, \
created = excluded.created

StoragePermissionRepository.deleteFilePermissions = \
DELETE \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND p.datastorage_type = 'FILE' \
AND p.datastorage_path = :datastorage_path

StoragePermissionRepository.deleteFolderPermissions = \
DELETE \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND (p.datastorage_path = :datastorage_path \
    AND p.datastorage_type = 'FOLDER' \
    OR p.datastorage_path LIKE :datastorage_path || '/%')
