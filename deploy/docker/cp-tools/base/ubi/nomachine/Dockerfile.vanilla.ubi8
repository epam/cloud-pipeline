# Copyright 2017-2024 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG BASE_IMAGE=redhat/ubi8:8.9
FROM $BASE_IMAGE

ENV LANG="en_US.UTF-8" 
ENV LANGUAGE=en_US


# yum config-manager --set-enabled powertools

RUN yum install -y epel-release && \
    yum install -y cmake \
                    gcc-toolset-9-toolchain && \
    yum install -y  wget \
                    vim \
                    xterm \
                    pulseaudio \
                    cups \
                    curl \
                    GConf2 \
                    nss \
                    xdg-utils \
                    pango \
                    liberation-fonts \
                    python2 \
                    sudo \
                    which \
                    mesa-libGLU \
                    git

RUN curl https://cloud-pipeline-oss-builds.s3.amazonaws.com/tools/pip/2.7/get-pip.py | python2 - && \
    pip install --upgrade pip flask

RUN pip install -I setuptools

# Install desktop environment
RUN dnf install -y --allowerasing coreutils

RUN yum -y install epel-release && \
    yum -y install git \
                    wget \
                     unzip \
                     glibc-static \
                     vim \
                     Lmod \
                     nfs-utils \
                     bash-completion \
                     mc &&  \
                    yum clean all
RUN yum -y install librdmacm  \
                    emacs &&  \
                    yum clean all
RUN yum -y install glx-utils  \
                    mesa-dri-drivers  \
                    xorg-x11-server-Xorg  \
                    xorg-x11-utils  \
                    xorg-x11-xauth  \
                    xorg-x11-xinit  \
                    xorg*fonts*  \
                    xterm libXvMC  \
                    mesa-libxatracker  \
                    freeglut  \
                    gnome-desktop3  \
                    gnome-terminal  \
                    gnome-system-monitor \
                     nautilus  \
                    evince  \
                    gnome-color-manager  \
                    gnome-font-viewer  \
                    gnome-shell  \
                    gnome-calculator  \
                    gedit  \
                    gdm  \
                    metacity  \
                    gnome-session  \
                    gnome-classic-session \
                     gnome-session-xsession  \
                    gnu-free-fonts-common  \
                    gnu-free-mono-fonts  \
                    gnu-free-sans-fonts  \
                    gnu-free-serif-fonts  \
                    desktop-backgrounds-gnome &&  \
                    yum -y groupinstall "Xfce"
RUN pip2 install PyJWT==1.7.1
RUN yum install -y mesa-libGLU \
                    xcb-util-wm \
                     xcb-util-image \
                     xcb-util-keysyms \
                     xcb-util-renderutil \
                     libXScrnSaver

RUN yum groupinstall -y "Xfce" && \
    yum groupinstall -y "Fonts" && \
    yum erase -y *power* *screensaver* && \
    rm -f /etc/xdg/autostart/xfce-polkit* && \
    /bin/dbus-uuidgen > /etc/machine-id

# Install keyboard layout switcher (xkb)
RUN yum install -y xfce4-xkb-plugin

RUN cd /opt && \
    wget -q "https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/nomachine/nomachine_8.4.2_1_x86_64.rpm" -O nomachine.rpm && \
    yum install -y nomachine.rpm && \
    rm -f nomachine.rpm

RUN sed -i '/DefaultDesktopCommand/c\DefaultDesktopCommand "/usr/bin/startxfce4"' /usr/NX/etc/node.cfg

RUN source /opt/rh/gcc-toolset-9/enable && \
    wget -q "https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/nomachine/scramble_alg.cpp" -O /usr/local/bin/scramble.cpp && \
    g++ /usr/local/bin/scramble.cpp -o /usr/local/bin/scramble && \
    rm -f /usr/local/bin/scramble.cpp

ADD serve_nxs.py /etc/nomachine/serve_nxs.py
ADD template.nxs /etc/nomachine/template.nxs
ADD xfce/ /etc/nomachine/xfce/
RUN mv /etc/nomachine/xfce/.config/xfce4/panel/xkb-plugin.rc /etc/nomachine/xfce/.config/xfce4/panel/xkb-plugin-6.rc

RUN sed -i 's@_XKB_PLUGIN_NAME_@xkb-plugin@g' /etc/nomachine/xfce/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml && \
    sed -i 's@_XKB_PLUGIN_ID_@6@g' /etc/nomachine/xfce/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml
ADD nomachine_launcher.sh /etc/nomachine/nomachine_launcher.sh
RUN chmod +x /etc/nomachine/nomachine_launcher.sh

# Install Chrome
RUN wget -q "https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm" -O /opt/google-chrome-stable_current_x86_64.rpm && \
    yum install -y /opt/google-chrome-stable_current_*.rpm && \
    rm -f /opt/google-chrome-stable_current_*.rpm


# Add Chrome desktop icon
ADD create_chrome_launcher.sh /caps/create_chrome_launcher.sh
RUN echo "bash /caps/create_chrome_launcher.sh" >> /caps.sh
RUN cp /usr/NX/etc/server.cfg /usr/NX/etc/server.cfg.template

