# Connectivity config
server.port=8080
server.shutdown=${CP_API_SRV_SHUTDOWN_TYPE:graceful}
server.context-path=/pipeline
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=text/html,text/xml,application/json,application/javascript
server.connection-timeout=20000
server.tomcat.max-threads=${CP_API_TOMCAT_THREADS:200}
server.override.host.header=${CP_API_OVERRIDE_HOST:false}
server.pod.header.name=${CP_API_POD_HEADER_NAME:Pod-Name}
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.force-response=true
spring.resources.static-locations=file:${CP_API_SRV_STATIC_DIR}/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
api.security.redirected.urls=${CP_API_SRV_REDIRECTED_URLS:/restapi/route,/restapi/**/prolong**,/restapi/static-resources/**}
api.security.anonymous.urls=${CP_API_SRV_ANONYMOUS_URLS:/restapi/route,/restapi/static-resources/**}
api.security.impersonation.operations.root.url=${CP_API_SECURITY_IMPERSONATION_ROOT_URL:/restapi/user/impersonation}
api.security.public.urls=${CP_API_SECURITY_PUBLIC_URLS:/init.sh,/launch.sh,/launch.py,/PipelineCLI.tar.gz,/pipe-common.tar.gz,/commit-run-scripts/**,/pipe,/fsbrowser.tar.gz,/gpustat.tar.gz,/pipe.zip,/pipe.tar.gz,/pipe-el6,/pipe-el6.tar.gz,/pipe-osx,/pipe-osx.tar.gz,/cloud-data-linux.tar.gz,/cloud-data-win64.zip,/cloud-data-cli-linux,/cloud-data-cli-macos,/cloud-data-cli-win.exe,/fsautoscale.sh,/data-transfer-service.jar,/data-transfer-service-windows.zip,/data-transfer-service-linux.zip,/DeployDts.ps1,/deploy_dts.sh}
# supported values - jdbc, HASH_MAP
spring.session.store-type=${CP_API_SRV_SESSION_STORE_TYPE:jdbc}
server.session.timeout=${CP_API_SRV_SESSION_TIMEOUT_SEC:1800}
spring.lifecycle.timeout-per-shutdown-phase=${CP_API_SRV_SHUTDOWN_TIMEOUT:30}s

# DB config
database.url=jdbc:postgresql://${PSG_HOST:cp-api-db.default.svc.cluster.local}:${PSG_PORT:5432}/${PSG_DB:pipeline}${PGS_CONNECT_PARAMS}
database.username=${PSG_USER:pipeline}
database.password=${PSG_PASS:pipeline}
database.driverClass=org.postgresql.Driver
database.max.pool.size=${CP_API_SRV_DB_POOL_SIZE:20}
database.initial.pool.size=${CP_API_SRV_DB_INITIAL_POOL_SIZE:10}
database.disable.cache=${CP_API_DISABLE_DB_CACHE:false}
datasource.pool.connection.timeout=${CP_API_SRV_DB_CONNECTION_TIMEOUT_MS:0}
datasource.pool.debug.unreturned=${CP_API_SRV_DB_DEBUG_UNRETURNED:false}
datasource.pool.unreturned.timeout=${CP_API_SRV_DB_UNRETURNED_TIMEOUT_SEC:0}
datasource.pool.helper.threads=${CP_API_SRV_DB_HELPER_THREADS:3}

# Flyway configuration
flyway.sql-migration-prefix=v
flyway.locations=classpath:db/migration
flyway.schemas=${PSG_DB:pipeline}
flyway.placeholders.default.admin=${CP_DEFAULT_ADMIN_NAME:pipe_admin}
flyway.placeholders.default.admin.id=${CP_DEFAULT_ADMIN_ID:1}
flyway.outOfOrder=${CP_API_FLYWAY_OUT_OF_ORDER:false}
flyway.ignoreMissingMigrations=${CP_API_FLYWAY_IGNORE_MISSING:false}

# SSO config
server.ssl.enabled-protocols=TLSv1.1,TLSv1.2
server.ssl.ciphers=HIGH:!RC4:!aNULL:!MD5:!kEDH
server.ssl.key-store=file:/opt/api/keystore/store.jks
server.ssl.metadata=${CP_API_SRV_FED_META_DIR}/cp-api-srv-fed-meta.xml
server.ssl.key-store-password=changeit
server.ssl.keyAlias=ssl
saml.sign.key=sso
server.ssl.endpoint.id=${CP_API_SRV_SSO_ENDPOINT_ID}
saml.authn.request.binding=${CP_API_SRV_SSO_BINDING}
# Create a user if it is not present in the database. Available strategies: AUTO, EXPLICIT, EXPLICIT_GROUP
saml.user.auto.create=${CP_API_SRV_SAML_AUTO_USER_CREATE:EXPLICIT}
saml.user.allow.anonymous=${CP_API_SRV_SAML_ALLOW_ANONYMOUS_USER:false}
saml.user.attributes=${CP_API_SRV_SAML_USER_ATTRIBUTES:Email=email,FirstName=firstName,LastName=lastName,Name=firstName}
saml.authorities.attribute.names=${CP_API_SRV_SAML_GROUPS_ATTRIBUTE_NAME:groups}
saml.login.failure.redirect=/error/auth.html
# Trust the SAML's tokens for 1 week (e.g. this is used by some IdP's when setting "Remember me")
saml.authn.max.authentication.age=${CP_API_SRV_SAML_MAX_AUTH_AGE:604800}
saml.logout.invalidate.session=${CP_API_SRV_SAML_LOGOUT_INVALIDATE_SESSION:false}
saml.validate.message.inresponse=${CP_API_SRV_SAML_VALIDATE_MESSAGE_INRESPONSE:true}

# Other configuration
working.directory=/opt/api/workspace
pause.pool.size=10

# Scheduled tasks
scheduled.pool.size=${CP_API_SCHEDULING_POOL_SIZE:5}
scheduled.quartz.pool.size=${CP_API_SCHEDULING_QUARTZ_POOL_SIZE:5}
scheduled.quartz.batch.size=${CP_API_SCHEDULING_QUARTZ_BATCH_SIZE:2}
scheduled.quartz.misfire.threshold.ms=${CP_API_SCHEDULING_QUARTZ_MISFIRE_THRESHOLD:300000}
scheduled.quartz.cluster.checkin.interval.ms=${CP_API_SCHEDULING_QUARTZ_CLUSTER_CHECKIN_INTERVAL:60000}
scheduled.quartz.db.driverDelegateClass=${CP_API_SCHEDULING_QUARTZ_DATABASE_DRIVER_DELEGATE_CLASS:org.quartz.impl.jdbcjobstore.PostgreSQLDelegate}

# JWT configuration
jwt.key.public=${CP_API_JWT_KEY_PUBLIC}
jwt.key.private=${CP_API_JWT_KEY_PRIVATE}
jwt.validate.token.user=${CP_API_JWT_VALIDATE_USER:false}

jwt.use.for.all.requests=${CP_API_USE_ONLY_JWT_AUTH:false}
jwt.disable.session=${CP_API_JWT_DISABLE_SESSION:false}
acl.disable.cache=${CP_API_DISABLE_ACL_CACHE:false}

# Templates configuration
templates.default.template=${CP_PREF_TEMPLATES_DEFAULT_TEMPLATE:empty}
templates.directory=/opt/api/pipe-templates
templates.folder.directory=/opt/api/folder-templates
templates.error.pages.directory=${CP_API_SRV_STATIC_DIR}/error

# Cluster management scripts config
## AWS
cluster.nodeup.script=/opt/api/scripts/aws/nodeup.py
cluster.nodedown.script=/opt/api/scripts/aws/nodedown.py
cluster.reassign.script=/opt/api/scripts/aws/node_reassign.py
cluster.node.terminate.script=/opt/api/scripts/aws/terminate_node.py
## Azure
cluster.azure.nodeup.script=/opt/api/scripts/azure/nodeup.py
cluster.azure.nodedown.script=/opt/api/scripts/azure/nodedown.py
cluster.azure.reassign.script=/opt/api/scripts/azure/node_reassign.py
cluster.azure.node.terminate.script=/opt/api/scripts/azure/terminate_node.py
#GCP
cluster.gcp.nodeup.script=/opt/api/scripts/nodeup.py
cluster.gcp.nodedown.script=/opt/api/scripts/nodedown.py
cluster.gcp.reassign.script=/opt/api/scripts/node_reassign.py
cluster.gcp.node.terminate.script=/opt/api/scripts/terminate_node.py

## Common
docker.registry.login.script=/opt/api/scripts/docker-login.sh


# Kube config
cluster.cadvisor.port=4194
cluster.cadvisor.request.period=15
cluster.cadvisor.timeout=10
cluster.cadvisor.disable.proxy=${CP_PREF_CLUSTER_CADVISOR_DISABLE_PROXY:true}
kube.namespace=default
kube.master.ip=${CP_KUBE_EXTERNAL_HOST}:${CP_KUBE_EXTERNAL_PORT}
kube.kubeadm.token=${CP_KUBE_KUBEADM_TOKEN:}
kube.kubeadm.cert.hash=${CP_KUBE_KUBEADM_CERT_HASH:}
kube.node.token=${CP_KUBE_NODE_TOKEN:}
kube.cluster.name=${CP_KUBE_CLUSTER_NAME:}
kube.master.pod.check.url=${CP_KUBE_MASTER_CHECK_URL:http://localhost:4040}
ha.deploy.enabled=${CP_HA_DEPLOY_ENABLED:false}
kube.current.pod.name=${CP_API_CURRENT_POD_NAME:localhost}
kube.default.service.target.port=${CP_API_KUBE_SVC_DEFAULT_TARGET_PORT:1000}
kube.deployment.api.url.prefix=${CP_API_KUBE_DEPLOYMENT_API_URL_PREFIX:apis/apps/v1}
kube.deployment.refresh.timeout=${CP_API_KUBE_DEPLOYMENT_REFRESH_TIMEOUT_SEC:3}
kube.deployment.refresh.retries=${CP_API_KUBE_DEPLOYMENT_REFRESH_RETRIES:15}
kube.annotation.value.length.limit=${CP_API_KUBE_ANNOTATION_VALUE_LENGTH_LIMIT:254}
kube.label.value.length.limit=${CP_API_KUBE_LABEL_VALUE_LENGTH_LIMIT:63}
kube.label.long.value.suffix.length=${CP_API_KUBE_LABEL_LONG_VALUE_SUFFIX_LENGTH:5}
kube.label.long.value.reducing.length=${CP_API_KUBE_LABEL_LONG_VALUE_REDUCING_LENGTH:12}

nat.gateway.auto.config.poll=${CP_API_NAT_POLL:60000}
nat.gateway.custom.dns.server.ip=${CP_API_CUSTOM_DNS_SERVER_IP:10.96.0.10}
nat.gateway.cp.service.name=${CP_API_NAT_PROXY_SERVICE_NAME:cp-tinyproxy-nat}
nat.gateway.cp.service.label.selector=${CP_API_NAT_PROXY_SERVICE_LABEL_SELECTOR:cp-tinyproxy}
nat.gateway.cm.dns.proxy.name=${CP_API_NAT_CM_DNS_PROXY_NAME:cp-dnsmasq-hosts}
nat.gateway.cm.global.name=${CP_API_NAT_CM_GLOBAL_NAME:cp-config-global}
nat.gateway.port.forwarding.protocols.mapping=${CP_API_NAT_PORT_FORWARDING_MAPPING:{TCP:'CP_TP_TCP_DEST',UDP:'CP_TP_UDP_DEST'}}
nat.gateway.hosts.key=${CP_API_NAT_HOSTS_KEY:hosts}

# Run management scripts config
commit.run.scripts.root.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/commit-run-scripts/
commit.run.script.starter.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/commit-run-scripts/commit_run_starter.sh
container.layers.script.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/commit-run-scripts/container_layers_count.sh
launch.script.url.linux=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/launch.sh
init.script.url.linux=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/init.sh
launch.script.url.windows=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/launch.py
pause.run.script.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/commit-run-scripts/pause_run.sh

# Pipeline management scripts
pipeline.local.path.transfer.script=${CP_API_SRV_PIPELINE_LOCAL_PATH_TRANSFER_SCRIPT:/opt/api/scripts/pipeline/transfer_path.sh}

# EDGE config
kube.edge.label=EDGE
kube.edge.ip.label=cloud-pipeline/external-host
kube.edge.port.label=cloud-pipeline/external-port
kube.edge.scheme.label=cloud-pipeline/external-scheme
kube.protected.node.labels=cloud-pipeline/role=EDGE

# Utilization monitoring
monitoring.elasticsearch.url=${CP_HEAPSTER_ELK_INTERNAL_HOST:cp-heapster-elk.default.svc.cluster.local}
monitoring.elasticsearch.port=${CP_HEAPSTER_ELK_INTERNAL_PORT:30094}
# Supported values: elastic, cadvisor
monitoring.backend=${CP_API_MONITORING_BACKEND:elastic}
monitoring.stats.export.xls.template=${CP_API_MONITORING_XLS_TEMPLATE_PATH:classpath:/templates/monitoring_report_template.xls}

# Logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Luigi pipelines handling
luigi.graph.script=/usr/lib/python2.7/site-packages/scripts/deps_graph.py

# File storages
data.storage.nfs.root.mount.point=/opt/api/file-systems
data.storage.nfs.default.umask=${CP_FILE_SHARE_STORAGE_DEFAULT_UMASK:0002}

#Billing API
billing.index.common.prefix=cp-billing
billing.center.key=${CP_BILLING_CENTER_KEY:billing-center}

#logging
log.security.elastic.index.prefix=${CP_SECURITY_LOGS_ELASTIC_PREFIX:security_log}

migration.alias.file=${CP_API_MIGRATION_ALIAS_FILE:}

#Cache
cache.type=${CP_API_CACHE_TYPE:MEMORY}
redis.host=${CP_REDIS_INTERNAL_HOST:}
redis.port=${CP_REDIS_INTERNAL_PORT:}
redis.pool.timeout=${CP_REDIS_POOL_TIMEOUT:20000}
redis.max.connections=${CP_REDIS_MAX_CONNECTIONS:20}
redis.use.optimized.parsing=${CP_REDIS_OPTIMIZED_PARSING:false}
redis.expose.connection=${CP_REDIS_EXPOSE_CONNECTION:false}

#edge
edge.internal.host=${CP_EDGE_INTERNAL_HOST:cp-edge.default.svc.cluster.local}
edge.internal.port=${CP_EDGE_INTERNAL_PORT:31081}

data.storage.nfs.quota.poll=${CP_API_NFS_QUOTA_POLL:60000}
data.storage.nfs.quota.metadata.key=${CP_API_NFS_QUOTA_METADATA_KEY:fs_notifications}
data.storage.nfs.quota.default.restrictive.status=${CP_API_NFS_QUOTA_DEFAULT_RESTRICTION:READ_ONLY}
data.storage.nfs.quota.triggers.resend.timeout.minutes=${CP_API_NFS_QUOTA_TRIGGER_EVICT_TIMEOUT_MINUTES:1440}

data.storage.nfs.events.enable.sync=${CP_API_ENABLE_STORAGE_EVENTS_SYNC:false}
data.storage.nfs.events.sync.bucket=${CP_CAP_NFS_MNT_OBSERVER_TARGET_BUCKET:}
data.storage.nfs.events.dump.timeout=${CP_API_STORAGE_EVENTS_DUMPING_TIMEOUT:30000}

data.storage.nfs.default.group.uid=${CP_DAV_MOUNT_DEFAULT_OWNER_GROUP:}

# Billing quota
billing.quota.monitor.cron=${CP_API_BILLING_QUOTA_CRON:0 0 9 ? * *}

#Misc
app.component.version.name=${CP_API_VERSION_PRETTY_NAME:}
app.component.version.file=${CP_API_COMPONENT_VERSION_FILE:classpath:static/components_versions.json}
