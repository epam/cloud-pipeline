<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean class="com.epam.pipeline.dao.pipeline.PipelineRunDao" id="pipelineRunDao" autowire="byName">
        <property name="pipelineRunSequence" value="pipeline.s_pipeline_run"/>
        <property name="createPipelineRunQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.pipeline_run (
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        ssh_password,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        env_vars,
                        prolonged_at_time,
                        last_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        pipeline_name,
                        node_start_date)
                    VALUES (
                        :RUN_ID,
                        :PIPELINE_ID,
                        :VERSION,
                        :START_DATE,
                        :END_DATE,
                        :PARAMETERS,
                        :STATUS,
                        :TERMINATING,
                        :POD_ID,
                        :NODE_TYPE,
                        :NODE_DISK,
                        :NODE_IP,
                        :NODE_ID,
                        :NODE_NAME,
                        :NODE_IMAGE,
                        :NODE_CLOUD_REGION,
                        :NODE_PLATFORM,
                        :DOCKER_IMAGE,
                        :ACTUAL_DOCKER_IMAGE,
                        :PLATFORM,
                        :CMD_TEMPLATE,
                        :ACTUAL_CMD,
                        :TIMEOUT,
                        :OWNER,
                        :POD_IP,
                        :SSH_PASSWORD,
                        :COMMIT_STATUS,
                        :LAST_CHANGE_COMMIT_TIME,
                        :CONFIG_NAME,
                        :NODE_COUNT,
                        :PARENT_ID,
                        :ENTITIES_IDS,
                        :IS_SPOT,
                        :CONFIGURATION_ID,
                        :POD_STATUS,
                        to_jsonb(:ENV_VARS::jsonb),
                        :PROLONGED_AT_TIME,
                        :LAST_NOTIFICATION_TIME,
                        :EXEC_PREFERENCES,
                        :PRETTY_URL,
                        :PRICE_PER_HOUR,
                        :COMPUTE_PRICE_PER_HOUR,
                        :DISK_PRICE_PER_HOUR,
                        :STATE_REASON,
                        :NON_PAUSE,
                        :NODE_REAL_DISK,
                        :NODE_CLOUD_PROVIDER,
                        to_jsonb(:TAGS::jsonb),
                        :SENSITIVE,
                        :PIPELINE_NAME,
                        :NODE_START_DATE)
                ]]>
            </value>
        </property>
        <property name="loadRunByIdQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.run_id,
                        r.pipeline_id,
                        r.version,
                        r.start_date,
                        r.end_date,
                        r.parameters,
                        r.status,
                        r.terminating,
                        r.pod_id,
                        r.node_type,
                        r.node_disk,
                        r.node_ip,
                        r.node_id,
                        r.node_name,
                        r.node_image,
                        r.node_cloud_region,
                        r.node_platform,
                        r.docker_image,
                        r.actual_docker_image,
                        r.platform,
                        r.cmd_template,
                        r.actual_cmd,
                        r.timeout,
                        r.owner,
                        r.pod_ip,
                        r.commit_status,
                        r.last_change_commit_time,
                        r.config_name,
                        r.node_count,
                        r.parent_id,
                        r.entities_ids,
                        r.is_spot,
                        r.configuration_id,
                        r.pod_status,
                        r.prolonged_at_time,
                        r.last_notification_time,
                        r.last_idle_notification_time,
                        r.exec_preferences,
                        r.pretty_url,
                        r.price_per_hour,
                        r.compute_price_per_hour,
                        r.disk_price_per_hour,
                        r.state_reason,
                        r.non_pause,
                        r.node_real_disk,
                        r.node_cloud_provider,
                        r.tags,
                        r.sensitive,
                        r.kube_service_enabled,
                        r.cluster_price,
                        r.pipeline_name,
                        r.node_pool_id,
                        r.node_start_date,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log init_tasks
				                WHERE init_tasks.run_id = :RUN_ID AND init_tasks.task_name = :TASK_NAME
				                    AND init_tasks.status = :TASK_STATUS)
				            THEN TRUE
				            ELSE FALSE
				        END AS initialization_finished,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log nodeup_tasks
				                WHERE nodeup_tasks.run_id = :RUN_ID AND nodeup_tasks.task_name = :NODEUP_TASK)
				            THEN FALSE
				            ELSE TRUE
				        END AS queued
                    FROM
                        pipeline.pipeline_run r
                    WHERE
                        r.run_id = :RUN_ID
                    ORDER BY
                        r.start_date
                ]]>
            </value>
        </property>
        <property name="loadSshPasswordQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.ssh_password
                    FROM
                        pipeline.pipeline_run r
                    WHERE
                        r.run_id = ?
                    ORDER BY
                        r.start_date
                ]]>
            </value>
        </property>
        <property name="loadAllRunsByVersionIdQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        version = ?
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
        <property name="loadAllRunsByPipelineIdQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        pipeline_id = ?
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
        <property name="loadAllRunsByPipelineIdAndVersionQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_name,
                        node_id,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        pipeline_id = ? and version = ?
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
        <property name="updateRunStatusQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        status = :STATUS,
                        end_date = :END_DATE,
                        terminating = :TERMINATING
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updateRunCommitStatusQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        commit_status = :COMMIT_STATUS,
                        last_change_commit_time = :LAST_CHANGE_COMMIT_TIME
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updateRunInstanceQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        node_type = :NODE_TYPE,
                        node_id = :NODE_ID,
                        node_disk = :NODE_DISK,
                        node_ip = :NODE_IP,
                        node_image = :NODE_IMAGE,
                        node_name = :NODE_NAME,
                        is_spot = :IS_SPOT,
                        node_real_disk = :NODE_REAL_DISK,
                        node_pool_id = :NODE_POOL_ID
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updateRunInstanceStartDateQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        node_start_date = :NODE_START_DATE
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updateRunQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        pipeline_id = :PIPELINE_ID,
                        version = :VERSION,
                        start_date = :START_DATE,
                        end_date = :END_DATE,
                        parameters = :PARAMETERS,
                        status = :STATUS,
                        terminating = :TERMINATING,
                        pod_id = :POD_ID,
                        node_type = :NODE_TYPE,
                        node_disk = :NODE_DISK,
                        node_ip = :NODE_IP,
                        node_id = :NODE_ID,
                        node_name = :NODE_NAME,
                        node_image = :NODE_IMAGE,
                        node_cloud_region = :NODE_CLOUD_REGION,
                        node_platform = :NODE_PLATFORM,
                        docker_image = :DOCKER_IMAGE,
                        actual_docker_image = :ACTUAL_DOCKER_IMAGE,
                        platform = :PLATFORM,
                        cmd_template = :CMD_TEMPLATE,
                        actual_cmd = :ACTUAL_CMD,
                        timeout = :TIMEOUT,
                        owner = :OWNER,
                        pod_ip = :POD_IP,
                        commit_status = :COMMIT_STATUS,
                        last_change_commit_time = :LAST_CHANGE_COMMIT_TIME,
                        config_name = :CONFIG_NAME,
                        node_count = :NODE_COUNT,
                        parent_id = :PARENT_ID,
                        entities_ids = :ENTITIES_IDS,
                        is_spot = :IS_SPOT,
                        configuration_id = :CONFIGURATION_ID,
                        pod_status = :POD_STATUS,
                        env_vars = to_jsonb(:ENV_VARS::jsonb),
                        prolonged_at_time = :PROLONGED_AT_TIME,
                        last_notification_time = :LAST_NOTIFICATION_TIME,
                        exec_preferences = :EXEC_PREFERENCES,
                        pretty_url = :PRETTY_URL,
                        price_per_hour = :PRICE_PER_HOUR,
                        compute_price_per_hour = :COMPUTE_PRICE_PER_HOUR,
                        disk_price_per_hour = :DISK_PRICE_PER_HOUR,
                        state_reason = :STATE_REASON,
                        non_pause = :NON_PAUSE,
                        node_real_disk =:NODE_REAL_DISK,
                        tags = to_jsonb(:TAGS::jsonb),
                        sensitive = :SENSITIVE,
                        kube_service_enabled = :KUBE_SERVICE_ENABLED,
                        pipeline_name = :PIPELINE_NAME,
                        node_start_date = :NODE_START_DATE
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updatePodIPQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        pod_ip = :POD_IP
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updatePodStatusQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        pod_status = :POD_STATUS
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updateLastNotificationQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        last_notification_time = :LAST_NOTIFICATION_TIME,
                        last_idle_notification_time = :LAST_IDLE_NOTIFICATION_TIME
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="updateProlongedAtTimeAndLastIdleNotificationTimeQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        prolonged_at_time = :PROLONGED_AT_TIME,
                        last_idle_notification_time = :LAST_IDLE_NOTIFICATION_TIME
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="loadRunningAndTerminatedPipelineRunsQuery">
            <value>
                <![CDATA[
                      SELECT
                      r.run_id,
                      r.pipeline_id,
                      r.version,
                      r.start_date,
                      r.end_date,
                      r.parameters,
                      r.status,
                      r.terminating,
                      r.pod_id,
                      r.node_type,
                      r.node_disk,
                      r.node_ip,
                      r.node_id,
                      r.node_name,
                      r.node_image,
                      r.node_cloud_region,
                      r.node_platform,
                      r.docker_image,
                      r.actual_docker_image,
                      r.platform,
                      r.cmd_template,
                      r.actual_cmd,
                      r.timeout,
                      r.owner,
                      r.pod_ip,
                      r.commit_status,
                      r.last_change_commit_time,
                      r.config_name,
                      r.node_count,
                      r.parent_id,
                      r.entities_ids,
                      r.is_spot,
                      r.configuration_id,
                      r.pod_status,
                      r.prolonged_at_time,
                      r.last_notification_time,
                      r.last_idle_notification_time,
                      r.exec_preferences,
                      r.pretty_url,
                      r.price_per_hour,
                      r.compute_price_per_hour,
                      r.disk_price_per_hour,
                      r.state_reason,
                      r.env_vars,
                      r.non_pause,
                      r.node_real_disk,
                      r.node_cloud_provider,
                      r.tags,
                      r.sensitive,
                      r.kube_service_enabled,
                      TRUE as initialization_finished,
                      FALSE as queued,
                      r.pipeline_name,
                      r.cluster_price,
                      r.node_pool_id,
                      r.node_start_date
                    FROM
                      pipeline.pipeline_run r
                    WHERE
                    r.status = 2 or r.terminating
                ]]>
            </value>
        </property>
        <property name="loadRunningPipelineRunsQuery">
            <!-- TODO: add check for pod_ip? -->
            <value>
                <![CDATA[
                      SELECT
                      r.run_id,
                      r.pipeline_id,
                      r.version,
                      r.start_date,
                      r.end_date,
                      r.parameters,
                      r.status,
                      r.terminating,
                      r.pod_id,
                      r.node_type,
                      r.node_disk,
                      r.node_ip,
                      r.node_id,
                      r.node_name,
                      r.node_image,
                      r.node_cloud_region,
                      r.node_platform,
                      r.docker_image,
                      r.actual_docker_image,
                      r.platform,
                      r.cmd_template,
                      r.actual_cmd,
                      r.timeout,
                      r.owner,
                      r.pod_ip,
                      r.commit_status,
                      r.last_change_commit_time,
                      r.config_name,
                      r.node_count,
                      r.parent_id,
                      r.entities_ids,
                      r.is_spot,
                      r.configuration_id,
                      r.pod_status,
                      r.prolonged_at_time,
                      r.last_notification_time,
                      r.last_idle_notification_time,
                      r.exec_preferences,
                      r.pretty_url,
                      r.price_per_hour,
                      r.compute_price_per_hour,
                      r.disk_price_per_hour,
                      r.state_reason,
                      r.non_pause,
                      r.node_real_disk,
                      r.node_cloud_provider,
                      r.tags,
                      r.sensitive,
                      r.kube_service_enabled,
                      TRUE as initialization_finished,
                      FALSE as queued,
                      r.pipeline_name,
                      r.cluster_price,
                      r.node_pool_id,
                      r.node_start_date
                    FROM
                      pipeline.pipeline_run r
                    WHERE
                    r.status = 2
                ]]>
            </value>
        </property>
        <property name="loadActiveServicesQuery">
            <value>
                <![CDATA[
                     WITH active_run AS
                     (SELECT
                      r.run_id,
                      r.pipeline_id,
                      r.version,
                      r.start_date,
                      r.end_date,
                      r.parameters,
                      r.status,
                      r.terminating,
                      r.pod_id,
                      r.node_type,
                      r.node_disk,
                      r.node_ip,
                      r.node_id,
                      r.node_name,
                      r.node_image,
                      r.node_cloud_region,
                      r.node_platform,
                      r.docker_image,
                      r.actual_docker_image,
                      r.platform,
                      r.cmd_template,
                      r.actual_cmd,
                      r.timeout,
                      r.owner,
                      r.pod_ip,
                      r.commit_status,
                      r.last_change_commit_time,
                      r.config_name,
                      r.node_count,
                      r.parent_id,
                      r.entities_ids,
                      r.is_spot,
                      r.configuration_id,
                      r.pod_status,
                      r.prolonged_at_time,
                      r.last_notification_time,
                      r.last_idle_notification_time,
                      r.exec_preferences,
                      r.pretty_url,
                      r.price_per_hour,
                      r.compute_price_per_hour,
                      r.disk_price_per_hour,
                      r.state_reason,
                      r.non_pause,
                      r.node_real_disk,
                      r.node_cloud_provider,
                      r.tags,
                      r.sensitive,
                      r.kube_service_enabled,
                      r.pipeline_name,
                      r.cluster_price,
                      r.node_pool_id,
                      r.node_start_date,
                      CASE
                        WHEN EXISTS (
                            SELECT 1 FROM pipeline.pipeline_run_service_url su
                            WHERE su.pipeline_run_id = r.run_id)
				            THEN TRUE
				            ELSE FALSE
				        END AS service_urls_enabled
                    FROM
                        pipeline.pipeline_run r
                    WHERE
                        r.status = 2
                    )
                    SELECT
                      active_run.run_id,
                      active_run.pipeline_id,
                      active_run.version,
                      active_run.start_date,
                      active_run.end_date,
                      active_run.parameters,
                      active_run.status,
                      active_run.terminating,
                      active_run.pod_id,
                      active_run.node_type,
                      active_run.node_disk,
                      active_run.node_ip,
                      active_run.node_id,
                      active_run.node_name,
                      active_run.node_image,
                      active_run.node_cloud_region,
                      active_run.node_platform,
                      active_run.docker_image,
                      active_run.actual_docker_image,
                      active_run.platform,
                      active_run.cmd_template,
                      active_run.actual_cmd,
                      active_run.timeout,
                      active_run.owner,
                      active_run.pod_ip,
                      active_run.commit_status,
                      active_run.last_change_commit_time,
                      active_run.config_name,
                      active_run.node_count,
                      active_run.parent_id,
                      active_run.entities_ids,
                      active_run.is_spot,
                      active_run.configuration_id,
                      active_run.pod_status,
                      active_run.prolonged_at_time,
                      active_run.last_notification_time,
                      active_run.last_idle_notification_time,
                      active_run.exec_preferences,
                      active_run.pretty_url,
                      active_run.price_per_hour,
                      active_run.compute_price_per_hour,
                      active_run.disk_price_per_hour,
                      active_run.state_reason,
                      active_run.non_pause,
                      active_run.node_real_disk,
                      active_run.node_cloud_provider,
                      active_run.tags,
                      active_run.sensitive,
                      active_run.kube_service_enabled,
                      active_run.pipeline_name,
                      active_run.cluster_price,
                      active_run.node_pool_id,
                      active_run.node_start_date,
                      CASE
                        WHEN EXISTS (
                            SELECT 1 FROM pipeline.pipeline_run_service_url su
                            WHERE su.pipeline_run_id = active_run.run_id)
				            THEN TRUE
				            ELSE FALSE
				        END AS service_urls_enabled
                    FROM active_run
                    INNER JOIN
                        (SELECT DISTINCT run_id
                        FROM pipeline.run_user
                        @WHERE@
                    ) AS u ON (active_run.run_id = u.run_id)
                    UNION
                        SELECT * FROM active_run
                        WHERE active_run.owner = :NAME AND service_urls_enabled
                    ORDER BY run_id DESC
                    LIMIT :LIMIT OFFSET :OFFSET
                ]]>
            </value>
        </property>
        <property name="countActiveServicesQuery">
            <value>
                <![CDATA[
                    WITH active_run AS
                      (SELECT
                      r.run_id,
                      r.pipeline_id,
                      r.version,
                      r.start_date,
                      r.end_date,
                      r.parameters,
                      r.status,
                      r.terminating,
                      r.pod_id,
                      r.node_type,
                      r.node_disk,
                      r.node_ip,
                      r.node_id,
                      r.node_name,
                      r.node_image,
                      r.node_cloud_region,
                      r.node_platform,
                      r.docker_image,
                      r.actual_docker_image,
                      r.platform,
                      r.cmd_template,
                      r.actual_cmd,
                      r.timeout,
                      r.owner,
                      r.pod_ip,
                      r.commit_status,
                      r.last_change_commit_time,
                      r.config_name,
                      r.node_count,
                      r.parent_id,
                      r.entities_ids,
                      r.is_spot,
                      r.configuration_id,
                      r.pod_status,
                      r.prolonged_at_time,
                      r.last_notification_time,
                      r.last_idle_notification_time,
                      r.exec_preferences,
                      r.pretty_url,
                      r.price_per_hour,
                      r.compute_price_per_hour,
                      r.disk_price_per_hour,
                      r.state_reason,
                      r.non_pause,
                      r.node_real_disk,
                      r.node_cloud_provider,
                      r.tags,
                      r.sensitive,
                      r.pipeline_name,
                      r.node_pool_id,
                      r.node_start_date,
                      CASE
                        WHEN EXISTS (
                            SELECT 1 FROM pipeline.pipeline_run_service_url su
                            WHERE su.pipeline_run_id = r.run_id)
				            THEN TRUE
				            ELSE FALSE
				        END AS service_urls_enabled
                    FROM
                        pipeline.pipeline_run r
                    WHERE
                        r.status = 2)
                    SELECT count(*) FROM (SELECT
                      active_run.run_id,
                      active_run.pipeline_id,
                      active_run.version,
                      active_run.start_date,
                      active_run.end_date,
                      active_run.parameters,
                      active_run.status,
                      active_run.terminating,
                      active_run.pod_id,
                      active_run.node_type,
                      active_run.node_disk,
                      active_run.node_ip,
                      active_run.node_id,
                      active_run.node_name,
                      active_run.node_image,
                      active_run.node_cloud_region,
                      active_run.node_platform,
                      active_run.docker_image,
                      active_run.actual_docker_image,
                      active_run.platform,
                      active_run.cmd_template,
                      active_run.actual_cmd,
                      active_run.timeout,
                      active_run.owner,
                      active_run.pod_ip,
                      active_run.commit_status,
                      active_run.last_change_commit_time,
                      active_run.config_name,
                      active_run.node_count,
                      active_run.parent_id,
                      active_run.entities_ids,
                      active_run.is_spot,
                      active_run.configuration_id,
                      active_run.pod_status,
                      active_run.prolonged_at_time,
                      active_run.last_notification_time,
                      active_run.last_idle_notification_time,
                      active_run.exec_preferences,
                      active_run.pretty_url,
                      active_run.price_per_hour,
                      active_run.compute_price_per_hour,
                      active_run.disk_price_per_hour,
                      active_run.state_reason,
                      active_run.non_pause,
                      active_run.node_real_disk,
                      active_run.node_cloud_provider,
                      active_run.tags,
                      active_run.sensitive,
                      active_run.pipeline_name,
                      active_run.node_pool_id,
                      active_run.node_start_date,
                      CASE
                        WHEN EXISTS (
                            SELECT 1 FROM pipeline.pipeline_run_service_url su
                            WHERE su.pipeline_run_id = active_run.run_id)
				            THEN TRUE
				            ELSE FALSE
				        END AS service_urls_enabled
                    FROM active_run
                    INNER JOIN
                        (SELECT DISTINCT run_id
                        FROM pipeline.run_user
                        @WHERE@
                        ) AS u ON (active_run.run_id = u.run_id)
                    UNION
                        SELECT * FROM active_run
                        WHERE active_run.owner = :NAME AND service_urls_enabled)
                    AS run_count
                ]]>
            </value>
        </property>
        <property name="loadTerminatingPipelineRunsQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.run_id,
                        r.pipeline_id,
                        r.version,
                        r.start_date,
                        r.end_date,
                        r.parameters,
                        r.status,
                        r.terminating,
                        r.pod_id,
                        r.node_type,
                        r.node_disk,
                        r.node_ip,
                        r.node_id,
                        r.node_name,
                        r.node_image,
                        r.node_cloud_region,
                        r.node_platform,
                        r.docker_image,
                        r.actual_docker_image,
                        r.platform,
                        r.cmd_template,
                        r.actual_cmd,
                        r.owner,
                        r.timeout,
                        r.pod_ip,
                        r.commit_status,
                        r.config_name,
                        r.node_count,
                        r.parent_id,
                        r.entities_ids,
                        r.is_spot,
                        r.configuration_id,
                        r.pod_status,
                        r.last_change_commit_time,
                        r.prolonged_at_time,
                        r.last_notification_time,
                        r.last_idle_notification_time,
                        r.exec_preferences,
                        r.pretty_url,
                        r.price_per_hour,
                        r.compute_price_per_hour,
                        r.disk_price_per_hour,
                        r.state_reason,
                        r.non_pause,
                        r.node_real_disk,
                        r.node_cloud_provider,
                        r.tags,
                        r.sensitive,
                        r.kube_service_enabled,
                        r.pipeline_name,
                        r.cluster_price,
                        r.node_pool_id,
                        r.node_start_date
                    FROM
                        pipeline.pipeline_run r
                    WHERE
                        r.terminating
                ]]>
            </value>
        </property>
        <property name="loadRunByPrettyUrlQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.run_id,
                        r.pipeline_id,
                        r.version,
                        r.start_date,
                        r.end_date,
                        r.parameters,
                        r.status,
                        r.terminating,
                        r.pod_id,
                        r.node_type,
                        r.node_disk,
                        r.node_ip,
                        r.node_id,
                        r.node_name,
                        r.node_image,
                        r.node_cloud_region,
                        r.node_platform,
                        r.docker_image,
                        r.actual_docker_image,
                        r.platform,
                        r.cmd_template,
                        r.actual_cmd,
                        r.owner,
                        r.timeout,
                        r.pod_ip,
                        r.commit_status,
                        r.config_name,
                        r.node_count,
                        r.parent_id,
                        r.entities_ids,
                        r.is_spot,
                        r.configuration_id,
                        r.pod_status,
                        r.last_change_commit_time,
                        r.prolonged_at_time,
                        r.last_notification_time,
                        r.last_idle_notification_time,
                        r.exec_preferences,
                        r.pretty_url,
                        r.price_per_hour,
                        r.compute_price_per_hour,
                        r.disk_price_per_hour,
                        r.state_reason,
                        r.non_pause,
                        r.node_real_disk,
                        r.node_cloud_provider,
                        r.tags,
                        r.sensitive,
                        r.kube_service_enabled,
                        r.pipeline_name,
                        r.cluster_price,
                        r.node_pool_id,
                        r.node_start_date
                    FROM
                        pipeline.pipeline_run r
                    WHERE
                        r.pretty_url = ?
                ]]>
            </value>
        </property>
        <property name="searchPipelineRunsBaseQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.run_id,
                        r.pipeline_id,
                        r.version,
                        r.start_date,
                        r.end_date,
                        r.parameters,
                        r.status,
                        r.terminating,
                        r.pod_id,
                        r.node_type,
                        r.node_disk,
                        r.node_ip,
                        r.node_id,
                        r.node_name,
                        r.node_image,
                        r.node_cloud_region,
                        r.node_platform,
                        r.docker_image,
                        r.actual_docker_image,
                        r.platform,
                        r.timeout,
                        r.cmd_template,
                        r.actual_cmd,
                        r.owner,
                        r.pod_ip,
                        r.commit_status,
                        r.last_change_commit_time,
                        r.config_name,
                        r.node_count,
                        r.parent_id,
                        r.entities_ids,
                        r.is_spot,
                        r.configuration_id,
                        r.pod_status,
                        r.prolonged_at_time,
                        r.last_notification_time,
                        r.last_idle_notification_time,
                        r.exec_preferences,
                        r.pretty_url,
                        r.price_per_hour,
                        r.compute_price_per_hour,
                        r.disk_price_per_hour,
                        r.state_reason,
                        r.non_pause,
                        r.node_real_disk,
                        r.node_cloud_provider,
                        r.tags,
                        r.sensitive,
                        r.kube_service_enabled,
                        r.pipeline_name,
                        r.cluster_price,
                        r.node_pool_id,
                        r.node_start_date,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log init_tasks
				                WHERE init_tasks.run_id = r.run_id AND init_tasks.task_name = :TASK_NAME
				                    AND init_tasks.status = :TASK_STATUS)
				            THEN TRUE
				            ELSE FALSE
				        END AS initialization_finished,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log nodeup_tasks
				                WHERE nodeup_tasks.run_id = r.run_id AND nodeup_tasks.task_name = :NODEUP_TASK)
				            THEN FALSE
				            ELSE TRUE
				        END AS queued
                    FROM
                        pipeline.pipeline_run r
                    @WHERE@
                    ORDER BY r.run_id DESC
                    LIMIT :LIMIT OFFSET :OFFSET
                ]]>
            </value>
        </property>
        <property name="countFilteredPipelineRunsBaseQuery">
            <value>
                <![CDATA[
                    SELECT
                        count(*) as count
                    FROM
                        pipeline.pipeline_run r
                    @WHERE@
                ]]>
            </value>
        </property>
        <property name="loadPipelineRunsWithPipelineByIdsQuery">
            <value>
                <![CDATA[
                    SELECT
                        runs.run_id,
                        runs.pipeline_id,
                        runs.version,
                        runs.start_date,
                        runs.end_date,
                        runs.parameters,
                        runs.status,
                        runs.terminating,
                        runs.pod_id,
                        runs.node_type,
                        runs.node_disk,
                        runs.node_ip,
                        runs.node_id,
                        runs.node_name,
                        runs.node_image,
                        runs.node_cloud_region,
                        runs.node_platform,
                        runs.docker_image,
                        runs.actual_docker_image,
                        runs.platform,
                        runs.cmd_template,
                        runs.actual_cmd,
                        runs.timeout,
                        runs.owner,
                        runs.pod_ip,
                        runs.commit_status,
                        runs.last_change_commit_time,
                        runs.config_name,
                        runs.node_count,
                        runs.parent_id,
                        runs.entities_ids,
                        runs.is_spot,
                        runs.configuration_id,
                        runs.pod_status,
                        runs.prolonged_at_time,
                        runs.last_notification_time,
                        runs.last_idle_notification_time,
                        runs.exec_preferences,
                        runs.pretty_url,
                        runs.price_per_hour,
                        runs.compute_price_per_hour,
                        runs.disk_price_per_hour,
                        runs.state_reason,
                        runs.non_pause,
                        runs.node_real_disk,
                        runs.node_cloud_provider,
                        runs.tags,
                        runs.sensitive,
                        runs.kube_service_enabled,
                        runs.cluster_price,
                        runs.node_pool_id,
                        runs.node_start_date,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log init_tasks
				                WHERE init_tasks.run_id = runs.run_id AND init_tasks.task_name = :TASK_NAME
				                    AND init_tasks.status = :TASK_STATUS)
				            THEN TRUE
				            ELSE FALSE
				        END AS initialization_finished,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log nodeup_tasks
				                WHERE nodeup_tasks.run_id = runs.run_id AND nodeup_tasks.task_name = :NODEUP_TASK)
				            THEN FALSE
				            ELSE TRUE
				        END AS queued,
                        runs.pipeline_name
                    FROM
                        pipeline.pipeline_run runs
                    WHERE runs.run_id IN (:list)
                ]]>
            </value>
        </property>
        <property name="loadRunsGroupingQuery">
            <value>
                <![CDATA[
                    WITH RECURSIVE runs AS (
                        SELECT
                            p.run_id,
                            p.pipeline_id,
                            p.version,
                            p.start_date,
                            p.end_date,
                            p.parameters,
                            p.status,
                            p.terminating,
                            p.pod_id,
                            p.node_type,
                            p.node_disk,
                            p.node_ip,
                            p.node_id,
                            p.node_name,
                            p.node_image,
                            p.node_cloud_region,
                            p.node_platform,
                            p.docker_image,
                            p.actual_docker_image,
                            p.platform,
                            p.cmd_template,
                            p.actual_cmd,
                            p.timeout,
                            p.owner,
                            p.pod_ip,
                            p.commit_status,
                            p.last_change_commit_time,
                            p.config_name,
                            p.node_count,
                            p.parent_id,
                            p.entities_ids,
                            p.is_spot,
                            p.configuration_id,
                            p.pod_status,
                            p.prolonged_at_time,
                            p.last_notification_time,
                            p.last_idle_notification_time,
                            p.exec_preferences,
                            p.pretty_url,
                            p.price_per_hour,
                            p.compute_price_per_hour,
                            p.disk_price_per_hour,
                            p.state_reason,
                            p.non_pause,
                            p.node_real_disk,
                            p.node_cloud_provider,
                            p.tags,
                            p.sensitive,
                            p.kube_service_enabled,
                            p.pipeline_name,
                            p.cluster_price,
                            p.node_pool_id,
                            p.node_start_date
                        FROM (SELECT *
                            FROM pipeline.pipeline_run r
                            WHERE parent_id ISNULL @WHERE@
                            ORDER BY run_id DESC
                            LIMIT :LIMIT OFFSET :OFFSET) as p
                        UNION
                        SELECT
                            c.run_id,
                            c.pipeline_id,
                            c.version,
                            c.start_date,
                            c.end_date,
                            c.parameters,
                            c.status,
                            c.terminating,
                            c.pod_id,
                            c.node_type,
                            c.node_disk,
                            c.node_ip,
                            c.node_id,
                            c.node_name,
                            c.node_image,
                            c.node_cloud_region,
                            c.node_platform,
                            c.docker_image,
                            c.actual_docker_image,
                            c.platform,
                            c.cmd_template,
                            c.actual_cmd,
                            c.timeout,
                            c.owner,
                            c.pod_ip,
                            c.commit_status,
                            c.last_change_commit_time,
                            c.config_name,
                            c.node_count,
                            c.parent_id,
                            c.entities_ids,
                            c.is_spot,
                            c.configuration_id,
                            c.pod_status,
                            c.prolonged_at_time,
                            c.last_notification_time,
                            c.last_idle_notification_time,
                            c.exec_preferences,
                            c.pretty_url,
                            c.price_per_hour,
                            c.compute_price_per_hour,
                            c.disk_price_per_hour,
                            c.state_reason,
                            c.non_pause,
                            c.node_real_disk,
                            c.node_cloud_provider,
                            c.tags,
                            c.sensitive,
                            c.kube_service_enabled,
                            c.pipeline_name,
                            c.cluster_price,
                            c.node_pool_id,
                            c.node_start_date
                        FROM
                            pipeline.pipeline_run c
                        INNER JOIN runs ON runs.run_id = c.parent_id
                    )
                    SELECT
                        runs.run_id,
                        runs.pipeline_id,
                        runs.version,
                        runs.start_date,
                        runs.end_date,
                        runs.parameters,
                        runs.status,
                        runs.terminating,
                        runs.pod_id,
                        runs.node_type,
                        runs.node_disk,
                        runs.node_ip,
                        runs.node_id,
                        runs.node_name,
                        runs.node_image,
                        runs.node_cloud_region,
                        runs.node_platform,
                        runs.docker_image,
                        runs.actual_docker_image,
                        runs.platform,
                        runs.cmd_template,
                        runs.actual_cmd,
                        runs.timeout,
                        runs.owner,
                        runs.pod_ip,
                        runs.commit_status,
                        runs.last_change_commit_time,
                        runs.config_name,
                        runs.node_count,
                        runs.parent_id,
                        runs.entities_ids,
                        runs.is_spot,
                        runs.configuration_id,
                        runs.pod_status,
                        runs.prolonged_at_time,
                        runs.last_notification_time,
                        runs.last_idle_notification_time,
                        runs.exec_preferences,
                        runs.pretty_url,
                        runs.price_per_hour,
                        runs.compute_price_per_hour,
                        runs.disk_price_per_hour,
                        runs.state_reason,
                        runs.non_pause,
                        runs.node_real_disk,
                        runs.node_cloud_provider,
                        runs.tags,
                        runs.sensitive,
                        runs.kube_service_enabled,
                        runs.cluster_price,
                        runs.node_pool_id,
                        runs.node_start_date,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log init_tasks
				                WHERE init_tasks.run_id = runs.run_id AND init_tasks.task_name = :TASK_NAME
				                    AND init_tasks.status = :TASK_STATUS)
				            THEN TRUE
				            ELSE FALSE
				        END AS initialization_finished,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log nodeup_tasks
				                WHERE nodeup_tasks.run_id = runs.run_id AND nodeup_tasks.task_name = :NODEUP_TASK)
				            THEN FALSE
				            ELSE TRUE
				        END AS queued,
                        runs.pipeline_name
                    FROM runs
                 ]]>
            </value>
        </property>
        <property name="loadRunsCountGroupingQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.run_id,
                        r.pipeline_id,
                        r.version,
                        r.start_date,
                        r.end_date,
                        r.parameters,
                        r.status,
                        r.terminating,
                        r.pod_id,
                        r.node_type,
                        r.node_disk,
                        r.node_ip,
                        r.node_id,
                        r.node_name,
                        r.node_image,
                        r.node_cloud_region,
                        r.node_platform,
                        r.docker_image,
                        r.actual_docker_image,
                        r.platform,
                        r.timeout,
                        r.cmd_template,
                        r.actual_cmd,
                        r.owner,
                        r.pod_ip,
                        r.commit_status,
                        r.last_change_commit_time,
                        r.config_name,
                        r.node_count,
                        r.parent_id,
                        r.entities_ids,
                        r.is_spot,
                        r.configuration_id,
                        r.pod_status,
                        r.prolonged_at_time,
                        r.last_notification_time,
                        r.last_idle_notification_time,
                        r.exec_preferences,
                        r.pretty_url,
                        r.price_per_hour,
                        r.compute_price_per_hour,
                        r.disk_price_per_hour,
                        r.state_reason,
                        r.non_pause,
                        r.node_real_disk,
                        r.node_cloud_provider,
                        r.tags,
                        r.sensitive,
                        r.kube_service_enabled,
                        r.pipeline_name,
                        r.cluster_price,
                        r.node_pool_id,
                        r.node_start_date,
                        (
                            SELECT count(*)
                            FROM pipeline.pipeline_run cr
                            WHERE cr.parent_id = r.run_id
                        ) AS child_runs_count,
                        (
                            SELECT count(*)
                            FROM pipeline.pipeline_run cr
                            WHERE cr.parent_id = r.run_id AND cr.status = 2
                        ) AS active_child_runs_count,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log init_tasks
				                WHERE init_tasks.run_id = r.run_id AND init_tasks.task_name = :TASK_NAME
				                    AND init_tasks.status = :TASK_STATUS)
				            THEN TRUE
				            ELSE FALSE
				        END AS initialization_finished,
                        CASE
                            WHEN EXISTS (
                                SELECT 1 FROM pipeline.pipeline_run_log nodeup_tasks
				                WHERE nodeup_tasks.run_id = r.run_id AND nodeup_tasks.task_name = :NODEUP_TASK)
				            THEN FALSE
				            ELSE TRUE
				        END AS queued
                    FROM
                        pipeline.pipeline_run r
                    WHERE parent_id ISNULL @WHERE@
                    ORDER BY r.run_id DESC
                    LIMIT :LIMIT OFFSET :OFFSET
                 ]]>
            </value>
        </property>
        <property name="countRunGroupsQuery">
            <value>
                <![CDATA[
                    SELECT
                        count(*) as count
                    FROM
                        pipeline.pipeline_run r
                    WHERE parent_id ISNULL @WHERE@
                ]]>
            </value>
        </property>
        <property name="createPipelineRunSidsQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.run_user (
                        run_id,
                        name,
                        is_principal,
                        access_type)
                    VALUES (
                        :RUN_ID,
                        :NAME,
                        :IS_PRINCIPAL,
                        :ACCESS_TYPE)
                ]]>
            </value>
        </property>
        <property name="loadRunSidsQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        name,
                        is_principal,
                        access_type
                    FROM
                        pipeline.run_user
                    WHERE
                        run_id = ?
                ]]>
            </value>
        </property>
        <property name="loadRunSidsQueryForList">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        name,
                        is_principal,
                        access_type
                    FROM
                        pipeline.run_user
                    WHERE
                        run_id IN (:list)
                ]]>
            </value>
        </property>
        <property name="deleteRunSidsByRunIdQuery">
            <value>
                <![CDATA[
                    DELETE FROM pipeline.run_user WHERE run_id = ?
                ]]>
            </value>
        </property>
        <property name="loadEnvVarsQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.env_vars
                    FROM
                        pipeline.pipeline_run r
                    WHERE
                        r.run_id = ?
                ]]>
            </value>
        </property>
        <property name="loadAllRunsPossiblyActiveInPeriodQuery">
            <value>
                <![CDATA[
                    SELECT
                        r.run_id as run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        r.status as status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_name,
                        node_id,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run r
                    INNER JOIN (SELECT DISTINCT ON (run_id) run_id, status
									FROM pipeline.run_status_change
										WHERE date < :PERIOD_END
											ORDER BY run_id, date DESC
                                 ) as last_statuses
                    ON r.run_id = last_statuses.run_id
                    WHERE last_statuses.status IN (:TARGET_LAST_STATUSES)
                            OR r.end_date BETWEEN :PERIOD_START AND :PERIOD_END
                ]]>
            </value>
        </property>
        <property name="updateTagsQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        tags = to_jsonb(:TAGS::jsonb)
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="loadAllRunsByStatusQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        status IN (:list)
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
        <property name="loadAllRunsByIdsQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        run_id IN (:list)
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
        <property name="loadRunByPodIPQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        status IN (:list) AND pod_ip = :POD_IP
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
        <property name="loadRunsByNodeNameQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        node_name = ?
                    ORDER BY
                        start_date DESC
                ]]>
            </value>
        </property>
        <property name="updateClusterPriceQuery">
            <value>
                <![CDATA[
                    UPDATE pipeline.pipeline_run SET
                        cluster_price = :CLUSTER_PRICE
                    WHERE
                        run_id = :RUN_ID
                ]]>
            </value>
        </property>
        <property name="loadRunsByParentRunsIdsQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        parent_id IN (:list)
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
        <property name="loadRunsByPoolIdQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        pipeline_id,
                        version,
                        start_date,
                        end_date,
                        parameters,
                        status,
                        terminating,
                        pod_id,
                        node_type,
                        node_disk,
                        node_ip,
                        node_id,
                        node_name,
                        node_image,
                        node_cloud_region,
                        node_platform,
                        docker_image,
                        actual_docker_image,
                        platform,
                        cmd_template,
                        actual_cmd,
                        timeout,
                        owner,
                        pod_ip,
                        commit_status,
                        last_change_commit_time,
                        config_name,
                        node_count,
                        parent_id,
                        entities_ids,
                        is_spot,
                        configuration_id,
                        pod_status,
                        prolonged_at_time,
                        last_notification_time,
                        last_idle_notification_time,
                        exec_preferences,
                        pretty_url,
                        price_per_hour,
                        compute_price_per_hour,
                        disk_price_per_hour,
                        state_reason,
                        non_pause,
                        node_real_disk,
                        node_cloud_provider,
                        tags,
                        sensitive,
                        kube_service_enabled,
                        pipeline_name,
                        cluster_price,
                        node_pool_id,
                        node_start_date
                    FROM
                        pipeline.pipeline_run
                    WHERE
                        node_pool_id = :NODE_POOL_ID AND status IN (:list)
                    ORDER BY
                        start_date
                ]]>
            </value>
        </property>
    </bean>
</beans>
