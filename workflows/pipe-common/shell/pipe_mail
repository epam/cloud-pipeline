#!/bin/bash
# NOTE 1: The difference between this script and pipe_notify is that this one is compatible with standard
# /bin/mail program and can be replacement for it.
# It can be very convenient and for some cases even necessary (f.i. integration with Slurm ang SGE)
#
# NOTE 2: Currently supports only bare minimal of options from original /bin/mail program (-s and receiver)
#
# See https://www.commandlinux.com/man-page/man1/mail.1.html for the information about all args

echo "Start sending emails to pipeline users" >> /var/log/pipe_mail.log

echo "Getting envs from /etc/cp_env.sh" >> /var/log/pipe_mail.log
source /etc/cp_env.sh

echo "Parsing args: $@" >> /var/log/pipe_mail.log
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -a|-b|-c|-u) # skipping unused key-value args of /bin/mail program
    shift # past argument
    shift # past value
    ;;
    -d|-E|-f|-I|-i|-N|-n|-v) # skipping unused flag args of /bin/mail program
    shift # past argument
    ;;
    -s) # Subject of the email to be sent
    export _NOTIFICATION_SUBJECT="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # save positional args
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

echo "Sending emails to: $@" >> /var/log/pipe_mail.log
while [[ $# -gt 0 ]]
do
    _to_user="$1"
    pipe_notify "$_NOTIFICATION_SUBJECT" "$_NOTIFICATION_SUBJECT" "$_to_user" &>> /var/log/pipe_mail.log
    shift # skip email that was already processed
done

echo "Done sending emails to pipeline users" >> /var/log/pipe_mail.log
echo >> /var/log/pipe_mail.log
