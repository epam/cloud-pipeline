#tomcat configuration
server.port=9999
server.context-path=/pipeline
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=text/html,text/xml,application/json,application/javascript
server.connection-timeout=20000
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.force-response=true

#Security
api.security.anonymous.urls=${CP_API_SRV_ANONYMOUS_URLS:/restapi/route}
api.security.impersonation.operations.root.url=${CP_API_SECURITY_IMPERSONATION_ROOT_URL:/restapi/user/impersonation}

#db configuration
database.url=
database.username=pipeline
database.password=pipeline
database.driverClass=org.postgresql.Driver
database.max.pool.size=5
database.initial.pool.size=10

#monitoring configuration
monitoring.backend=
monitoring.stats.export.xls.template=${CP_API_MONITORING_XLS_TEMPLATE_PATH:classpath:/templates/monitoring_report_template.xls}

#flyway configuration
flyway.sql-migration-prefix=v
flyway.locations=classpath:db/migration
flyway.schemas=pipeline
flyway.placeholders.default.admin=
flyway.placeholders.default.admin.id=1

#applicaion configuration
working.directory=
api.host=
launch.script.url=

#commit run scripts
commit.run.scripts.root.url=
commit.run.script.starter.url=

pause.run.script.url=
resume.run.script.url=
pause.pool.size=
run.scheduling=false

# Pipeline management scripts
pipeline.local.path.transfer.script=

#luigi
kube.namespace=
luigi.graph.script=

jwt.key.public=
jwt.key.private=

#sso config
server.ssl.ciphers=
server.ssl.key-store=
server.ssl.metadata=
server.ssl.key-store-password=
server.ssl.keyAlias=
server.ssl.endpoint.id=
saml.authorities.attribute.names=
saml.authn.request.binding=
saml.sign.key=
saml.user.attributes=
saml.user.auto.create=
saml.user.allow.anonymous=


#cluster management
cluster.nodeup.script=
cluster.nodedown.script=
cluster.keep.alive.minutes=
cluster.node.terminate.script=
cluster.cadvisor.port=4194

# Instance offers expiration check rate in milliseconds
kube.edge.label=EDGE
kube.edge.ip.label=
kube.edge.port.label=
kube.master.ip=
kube.kubeadm.token=
kube.default.service.target.port=${CP_API_KUBE_SVC_DEFAULT_TARGET_PORT:1000}
kube.deployment.api.url.prefix=${CP_API_KUBE_DEPLOYMENT_API_URL_PREFIX:apis/extensions/v1beta1}
kube.deployment.refresh.timeout=${CP_API_KUBE_DEPLOYMENT_REFRESH_TIMEOUT_SEC:3}
kube.deployment.refresh.retries=${CP_API_KUBE_DEPLOYMENT_REFRESH_RETRIES:15}
kube.annotation.value.length.limit=${CP_API_KUBE_ANNOTATION_VALUE_LENGTH_LIMIT:254}
kube.label.value.length.limit=${CP_API_KUBE_LABEL_VALUE_LENGTH_LIMIT:63}
kube.label.long.value.suffix.length=${CP_API_KUBE_LABEL_LONG_VALUE_SUFFIX_LENGTH:5}
kube.label.long.value.reducing.length=${CP_API_KUBE_LABEL_LONG_VALUE_REDUCING_LENGTH:12}

nat.gateway.auto.config.poll=${CP_API_NAT_POLL:60000}
nat.gateway.custom.dns.server.ip=${CP_API_CUSTOM_DNS_SERVER_IP:10.96.0.10}
nat.gateway.cp.service.name=${CP_API_NAT_PROXY_SERVICE_NAME:cp-tinyproxy-nat}
nat.gateway.cp.service.label.selector=${CP_API_NAT_PROXY_SERVICE_LABEL_SELECTOR:cp-tinyproxy}
nat.gateway.cm.dns.proxy.name=${CP_API_NAT_CM_DNS_PROXY_NAME:cp-dnsmasq-hosts}
nat.gateway.cm.global.name=${CP_API_NAT_CM_GLOBAL_NAME:cp-config-global}
nat.gateway.port.forwarding.protocols.mapping=${CP_API_NAT_PORT_FORWARDING_MAPPING:{TCP:'CP_TP_TCP_DEST',UDP:'CP_TP_UDP_DEST'}}
nat.gateway.hosts.key=${CP_API_NAT_HOSTS_KEY:hosts}

# Root mount point for mounting NFS file systems. Must be a directory, where pipeline's user has write access
data.storage.nfs.root.mount.point=
# Mount options for NFS
data.storage.nfs.options.rsize=1048576
data.storage.nfs.options.wsize=1048576

data.storage.nfs.quota.poll=${CP_API_NFS_QUOTA_POLL:60000}
data.storage.nfs.quota.metadata.key=${CP_API_NFS_QUOTA_METADATA_KEY:fs_notifications}
data.storage.nfs.quota.default.restrictive.status=${CP_API_NFS_QUOTA_DEFAULT_RESTRICTION:READ_ONLY}
data.storage.nfs.quota.triggers.resend.timeout.minutes=${CP_API_NFS_QUOTA_TRIGGER_EVICT_TIMEOUT_MINUTES:1440}

data.storage.nfs.events.enable.sync=${CP_API_ENABLE_STORAGE_EVENTS_SYNC:false}
data.storage.nfs.events.sync.bucket=${CP_CAP_NFS_MNT_OBSERVER_TARGET_BUCKET:}
data.storage.nfs.events.dump.timeout=${CP_API_STORAGE_EVENTS_DUMPING_TIMEOUT:30000}

#Firecloud
firecloud.auth.client.id=
firecloud.auth.client.secret=
