#
# Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# WEB
server.port=9997
server.servlet.context-path=/dts
server.compression.enabled=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.force-response=true

# DB
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:h2:file:./db/dts
spring.datasource.username=dts
spring.datasource.password=dts
spring.datasource.driver-class-name=org.h2.Driver
datasource.pool.initial-size=2
datasource.pool.max-size=5

task.pool.size=${DTS_COMMON_EXECUTOR_POOL_SIZE:10}
task.local.pool.size=${DTS_LOCAL_TRANSFER_POOL_SIZE:3}
task.scheduled.pool.size=${DTS_SCHEDULED_EXECUTOR_POOL_SIZE:2}

dts.transfer.pipe.executable=${DTS_PIPE_EXECUTABLE:pipe}
dts.transfer.pipe.cp.suffix=-r -f -s -sl=filter
dts.transfer.grid.upload=false
dts.transfer.grid.template=qsub -sync y -o %s -e %s %s
dts.transfer.upload.force=false
dts.transfer.upload.retry=5

# Security
jwt.public.key=${CP_API_JWT_KEY_PUBLIC:}

dts.submission.workdir=${DTS_SUBMISSION_WORKDIR:submissions}

#in ms
dts.submission.statusPoll=30000
dts.submission.qsubTemplate=${DTS_SUBMISSION_QSUB_TEMPLATE:qsub.sh}
dts.submission.qsubCommand=qsub
dts.submission.logFile=out.log
dts.submission.doneFile=done
dts.submission.coresNumber=8

dts.submission.queue.name=docker.q
dts.submission.qhost.cmd=qhost -q -xml
dts.submission.qstat.cmd=qstat -j $[job_id] -xml
dts.submission.qdel.cmd=qdel -f $[job_id]
dts.service.name=DTS
#in sec
dts.pipeline.read.timeout=30
#in sec
dts.pipeline.connect.timeout=10

dts.listing.listScript=
dts.listing.listCommand=%s --path '%s' --offset '%d' --size '%d'

dts.impersonation.enabled=${DTS_IMPERSONATION_ENABLED:true}
dts.impersonation.name.transformation=LOWERCASE
dts.impersonation.name.metadata.key=dts_name


dts.name=${DTS_LOCAL_NAME:}
dts.api.url=${CP_API_URL:}
dts.api.token=${CP_API_JWT_TOKEN:}
dts.api.timeout.seconds=${CP_API_TIMEOUT_SECONDS:60}
dts.api.token.path=${CP_API_JWT_TOKEN_PATH:}
dts.api.token.exp.days=${CP_API_JWT_TOKEN_EXP_DAYS:1}
dts.sync.poll=${DTS_SYNC_POLL_TIMEOUT:30000}
dts.heartbeat.poll=${DTS_HEARTBEAT_POLL_TIMEOUT:60000}
dts.autonomous.sync.cron=${DTS_AUTONOMOUS_SYNC_CRON:0 0 0 ? * *}
dts.sync.transfer.triggers.max.depth=${DTS_SYNC_TRANSFER_TRIGGER_SEARCH_MAX_DEPTH:3}

dts.preference.shutdown.key=${DTS_PREFERENCE_SHUTDOWN_KEY:dts.restart.force}
dts.preference.sync.rules.key=${DTS_PREFERENCE_SYNC_RULES_KEY:dts.local.sync.rules}
dts.preference.heartbeat.enabled.key=${DTS_PREFERENCE_HEARTBEAT_ENABLED_KEY:dts.heartbeat.enabled}
