apiVersion: v1
kind: Service
metadata:
  labels:
    cloud-pipeline/cp-edge: "true"
    cloud-pipeline/role: "EDGE"
    cloud-pipeline/region: $CP_CLOUD_REGION_ID
  name: cp-edge
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: ${CP_EDGE_INTERNAL_PORT}
      targetPort: 8080
      name: cp-edge-port-https
    - protocol: TCP
      port: ${CP_EDGE_WEB_INTERNAL_PORT}
      targetPort: 8181
      name: cp-edge-port-web
    - protocol: TCP
      port: ${CP_EDGE_CONNECT_INTERNAL_PORT}
      targetPort: 8282
      name: cp-edge-port-connect
  selector:
    cloud-pipeline/cp-edge: "true"
    cloud-pipeline/region: $CP_CLOUD_REGION_ID
---
apiVersion: v1
kind: Service
metadata:
  name: ingress
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-scheme: ${CP_EDGE_AWS_ELB_SCHEME}
    service.beta.kubernetes.io/aws-load-balancer-subnets: ${CP_EDGE_AWS_ELB_SUBNETS}
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: ${CP_EDGE_AWS_ELB_EIPALLOCS}
    service.beta.kubernetes.io/aws-load-balancer-security-groups: ${CP_EDGE_AWS_ELB_SG}
spec:
  type: LoadBalancer
  selector:
    cloud-pipeline/role: "EDGE"
    cloud-pipeline/region: $CP_CLOUD_REGION_ID
    cloud-pipeline/cp-edge: "true"
  ports:
    - port: 443
      targetPort: 8080
      protocol: TCP