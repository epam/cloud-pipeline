#!/bin/bash
# Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

mkdir -p /opt/tinyproxy/logs
mkdir -p /var/run/tinyproxy

########################
# TinyProxy config
########################
CP_TP_ALLOWED_CIDR="${CP_TP_ALLOWED_CIDR:-10.244.0.0/16}"
CP_TP_INTERNAL_PORT="${CP_TP_INTERNAL_PORT:-3128}"
CP_TP_VIA_NAME="${CP_PREF_UI_PIPELINE_DEPLOYMENT_NAME:-CloudPipeline}-tinyproxy"
CP_TP_CONFIG_PATH="${CP_TP_CONFIG_PATH:-/opt/tinyproxy/tinyproxy.conf}"

CP_TP_MAX_CLIENTS="${CP_TP_MAX_CLIENTS:-100}"
CP_TP_MIN_SPARE_SERVERS="${CP_TP_MIN_SPARE_SERVERS:-2}"
CP_TP_MAX_SPARE_SERVERS="${CP_TP_MAX_SPARE_SERVERS:-5}"
CP_TP_START_SERVERS="${CP_TP_START_SERVERS:-2}"
CP_TP_MAX_REQ_PER_CHILD="${CP_TP_MAX_REQ_PER_CHILD:-0}"

cat > "$CP_TP_CONFIG_PATH" <<EOF
User root
Group root

Port $CP_TP_INTERNAL_PORT
Listen 0.0.0.0
BindSame yes
Timeout 600

DefaultErrorFile "/opt/tinyproxy/logs/default.html"
StatFile "/opt/tinyproxy/logs/stats.html"
Logfile "/opt/tinyproxy/logs/tinyproxy.log"
LogLevel Info
PidFile "/var/run/tinyproxy/tinyproxy.pid"

MaxClients $CP_TP_MAX_CLIENTS
MinSpareServers $CP_TP_MIN_SPARE_SERVERS
MaxSpareServers $CP_TP_MAX_SPARE_SERVERS
StartServers $CP_TP_START_SERVERS
MaxRequestsPerChild $CP_TP_MAX_REQ_PER_CHILD

Allow $CP_TP_ALLOWED_CIDR

ViaProxyName "$CP_TP_VIA_NAME"
EOF

if [ "$CP_TP_ALLOWED_PORTS" ]; then
    echo "ConnectPort $CP_TP_ALLOWED_PORTS" >> "$CP_TP_CONFIG_PATH"
fi

if [ "$CP_TP_UPSTREAM" ]; then
    echo "Upstream http $CP_TP_UPSTREAM" >> "$CP_TP_CONFIG_PATH"
fi

tinyproxy -c "$CP_TP_CONFIG_PATH"

#################################
# Nginx (TCP/UDP forward) config
#################################
function nginx_add_proxy_entry {
    local _entry_spec="$1"
    local _entry_protocol="$2"

    echo "-"
    echo "Processing entry: $_entry_spec"
    echo "Protocol: $_entry_protocol"

    if [ "$_entry_protocol" == "tcp" ]; then
        _entry_protocol=
    fi

    IFS=',' read -ra _hosts <<< "$_entry_spec"
    for _h in "${_hosts[@]}"; do
        IFS=':' read -ra _host_port <<< "$_h"
        _source_port="${_host_port[0]}"
        _dest_host="${_host_port[1]}"
        _dest_port="${_host_port[2]}"
        if  [ -z "$_source_port" ] || \
            [ -z "$_dest_host" ] || \
            [ -z "$_dest_port" ]; then
            echo "Invalid entry format, skipping"
            continue
        fi
        echo "server { listen $_source_port; proxy_pass ${_dest_host}:${_dest_port} ${_entry_protocol}; }" >> "$CP_TP_NGINX_CONFIG"
        echo "Entry added: ${_source_port}->${_dest_host}:${_dest_port}"
    done

    echo "-"
}

mkdir -p /opt/tinyproxy/nginx/logs
CP_TP_NGINX_CONFIG="${CP_TP_NGINX_CONFIG:-/etc/nginx/nginx.conf}"

if [ "$CP_TP_TCP_DEST" ] || [ "$CP_TP_UDP_DEST" ]; then

# Add general nginx config
cat > "$CP_TP_NGINX_CONFIG" <<EOF
user nginx;
worker_processes auto;
error_log /opt/tinyproxy/nginx/logs/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

stream {
EOF

echo "Adding nginx tcp/udp forward entries"

# CP_TP_TCP_DEST and CP_TP_UDP_DEST shall contain the specs in the following format:
# SRC_PORT1:DEST_HOST1:DEST_PORT1,SRC_PORT2:DEST_HOST2:DEST_PORT2
# - SRC_PORTx - will listen on this port
# - DEST_HOSTx - will forward traffic to this host
# - DEST_PORTx - will forward traffic to this port on DEST_HOSTx
if [ "$CP_TP_TCP_DEST" ]; then
    nginx_add_proxy_entry "$CP_TP_TCP_DEST" "tcp"
fi
if [ "$CP_TP_UDP_DEST" ]; then
    nginx_add_proxy_entry "$CP_TP_UDP_DEST" "udp"
fi

# Add general nginx footer
echo " }" >> "$CP_TP_NGINX_CONFIG"

echo "Done adding nginx tcp/udp forward entries"

nginx

fi

# Just wait on
sleep infinity
