apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cp-api-srv
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      namespace: default
      labels:
        cloud-pipeline/cp-api-srv: "true"
    spec:
      nodeSelector:
        cloud-pipeline/cp-api-srv: "true"
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      initContainers:
        - name: cp-api-preconfigure-access
          image: busybox
          command: [ "/bin/sh", "-c", "mkdir -p ${CP_CLOUD_DATA_PATCHING_DIR} && chown -R ${CP_CLOUD_DATA_PRECONFIGURE_UID}:${CP_CLOUD_DATA_PRECONFIGURE_UID} ${CP_CLOUD_DATA_PATCHING_DIR}" ]
          volumeMounts:
            - name: api-etc-assets
              mountPath: ${CP_PREF_API_ETC_DIRECTORY}
        - name: cp-api-preconfigure
          image: ${CP_DOCKER_DIST_SRV}lifescience/cloud-pipeline:api-preconfigure-$CP_VERSION
          imagePullPolicy: "Always"
          command: ["/preconfigure-api"]
          envFrom:
            - configMapRef:
                name: cp-config-global
          volumeMounts:
            - mountPath: /opt/api/common
              name: api-common
            - mountPath: ${CP_PREF_API_STATIC_DIRECTORY_EXT}
              name: api-static-assets
            - mountPath: ${CP_PREF_API_ETC_DIRECTORY}
              name: api-etc-assets
      containers:
        - name: cp-api-srv-leader-elector
          image: ${CP_DOCKER_DIST_SRV}lifescience/cloud-pipeline:leader-elector-$CP_VERSION
          imagePullPolicy: "Always"
          securityContext:
            privileged: true
          command: [ "/elector/init" ]
          ports:
            - containerPort: 4040
          env:
            - name: HA_ELECTION_SERVICE_NAME
              value: "cp-api-srv"
            - name: HA_ELECTION_PERIOD_SEC
              value: "5"
            - name: HA_VOTE_EXPIRATION_PERIOD_SEC
              value: "7"
          envFrom:
            - configMapRef:
                name: cp-config-global
          
        - name: cp-api-srv
          image: ${CP_DOCKER_DIST_SRV}lifescience/cloud-pipeline:api-srv-$CP_VERSION
          imagePullPolicy: "Always"
          securityContext:
            privileged: true
          command: ["/init-api"]
          ports:
            - containerPort: 8080
          env:
            - name: CP_KUBE_MASTER_CHECK_URL
              value: http://127.0.0.1:4040/
            - name: CP_HA_DEPLOY_ENABLED
              value: "true"
            - name: CP_API_CURRENT_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CP_API_CURRENT_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
          - configMapRef:
              name: cp-config-global
          volumeMounts:
            - mountPath: /opt/api/pki
              name: api-pki
            - mountPath: /opt/api/sso
              name: api-sso
            - mountPath: /var/log/cp-api
              name: api-logs
            - mountPath: ${CP_PREF_TEMPLATES_DIRECTORY_EXT}
              name: api-pipe-templates
            - mountPath: ${CP_PREF_TEMPLATES_FOLDER_DIRECTORY_EXT}
              name: api-folder-templates
            - mountPath: ${CP_PREF_TEMPLATES_ERROR_PAGES_DIRECTORY_EXT}
              name: api-error-templates
            - mountPath: ${CP_PREF_API_STATIC_DIRECTORY_EXT}
              name: api-static-assets
            - mountPath: ${CP_PREF_API_ETC_DIRECTORY}
              name: api-etc-assets
            - mountPath: /opt/idp/pki
              name: idp-pki
            - mountPath: /opt/common/pki
              name: common-pki
              readOnly: true
            - mountPath: /opt/gitlab/pki
              name: git-pki
              readOnly: true
            - mountPath: /root/.kube
              name: kube-config
              readOnly: true
            - name: cp-cloud-credentials
              mountPath: "/root/.cloud"
              readOnly: true
              # Using /etc/cp_ssh instead of a "general" ~/.ssh/ because it may break some of the openssh-created files (e.g. known hosts)
              # as this volumes is mounted "read only"
            - name: cp-cluster-ssh-key
              mountPath: "/etc/cp_ssh"
              readOnly: true
            - mountPath: /opt/api/common
              name: api-common
          readinessProbe:
            httpGet:
              path: /pipeline/launch.sh
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /pipeline/launch.sh
              port: 8080
              scheme: HTTPS
            # 5 min delay to make sure API is up and running and drop pod after 60 seconds (4*15s) if API didn't respond
            initialDelaySeconds: 150
            periodSeconds: 15
            failureThreshold: 4
      volumes:
        - name: api-pki
          hostPath:
            path: /opt/api/pki
        - name: api-sso
          hostPath:
            path: /opt/api/sso
        - name: api-logs
          hostPath:
            path: /opt/api/logs
        - name: api-pipe-templates
          hostPath:
            path: /opt/api/templates/pipe-templates
        - name: api-folder-templates
          hostPath:
            path: /opt/api/templates/folder-templates
        - name: api-error-templates
          hostPath:
            path: /opt/api/templates/error-templates
        - name: api-static-assets
          hostPath:
            path: /opt/api/templates/static
        - name: api-etc-assets
          hostPath:
            path: /opt/api/etc
        - name: idp-pki
          hostPath:
            path: /opt/idp/pki
        - name: common-pki
          hostPath:
            path: /opt/common/pki
        - name: git-pki
          hostPath:
            path: /opt/gitlab/pki
        - name: kube-config
          hostPath:
            path: /root/.kube
        - name: cp-cloud-credentials
          secret:
            secretName: cp-cloud-credentials
        - name: cp-cluster-ssh-key
          secret:
            secretName: cp-cluster-ssh-key
            # Kube accepts mode in decimal. So 384 gives 600, which is required for SSH keys
            defaultMode: 384
        - name: api-common
          emptyDir:
            medium: Memory
      imagePullSecrets:
        - name: cp-distr-docker-registry-secret
