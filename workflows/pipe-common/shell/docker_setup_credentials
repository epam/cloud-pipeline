#!/usr/bin/env bash

# Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################################
# Common
###############################################################

if [ "$1" == "--skip-cert" ]; then
    _DIND_SKIP_CERTS_SETUP=1
fi

###############################################################
# Setup certificates and login to the available registries
###############################################################
if [ -z "$_DIND_SKIP_CERTS_SETUP" ]; then
    _DIND_REGISTRIES_JSON=$(curl -k -s --fail --header "Authorization: Bearer $API_TOKEN" $API/dockerRegistry/loadCerts)
    if [ $? -ne 0 ]; then
        echo "Cannot get the list of the certificates for the docker registries"
        exit 1
    fi

    _DIND_REGISTRIES_LIST=$(echo "$_DIND_REGISTRIES_JSON" | jq -r '.payload | keys[]')
    _DIND_REGISTRY_NAME_EXAMPLE=
    while read _DIND_REGISTRY_NAME; do
        echo "Configuring certificates and credentials for $_DIND_REGISTRY_NAME registry"
        _DIND_REGISTRY_NAME_EXAMPLE=$_DIND_REGISTRY_NAME
        _DIND_REGISTRY_CERTS_DIR="/etc/docker/certs.d/$_DIND_REGISTRY_NAME"
        mkdir -p $_DIND_REGISTRY_CERTS_DIR
        echo $_DIND_REGISTRIES_JSON | jq -r ".payload.\"${_DIND_REGISTRY_NAME}\"" > $_DIND_REGISTRY_CERTS_DIR/ca.crt
        echo "ca.crt is written to $_DIND_REGISTRY_CERTS_DIR/ca.crt"

        # Login to the registry
        docker login "$_DIND_REGISTRY_NAME" -u "$OWNER" --password-stdin <<< "$API_TOKEN" > /dev/null 2>&1
        if [ $? -ne 0 ]; then
            echo "Unable to configure docker credentials for $_DIND_REGISTRY_NAME registry and $OWNER user"
            continue
        else
            echo "Docker credentials are configured for $_DIND_REGISTRY_NAME registry and $OWNER user"
        fi
    done <<<$_DIND_REGISTRIES_LIST
    
    echo "Registry certificates and credentials are configured"

motd_setup add "This job was launched with 'Docker-IN-Docker' enabled
The following registries are available and authenticated:
$_DIND_REGISTRIES_LIST
Please use those to pull and push images
E.g.:
* docker pull '$_DIND_REGISTRY_NAME_EXAMPLE/library/centos'
* docker push my_image '$_DIND_REGISTRY_NAME_EXAMPLE/$OWNER/myimage'"

else
    echo "Registry certificates and credentials configuration will be skipped"
fi
