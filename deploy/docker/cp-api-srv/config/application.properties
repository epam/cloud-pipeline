# Connectivity config
server.port=8080
server.context-path=/pipeline
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=text/html,text/xml,application/json,application/javascript
server.connection-timeout=20000
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.force-response=true
spring.resources.static-locations=file:${CP_API_SRV_STATIC_DIR}/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

# DB config
database.url=jdbc:postgresql://${PSG_HOST:cp-api-db.default.svc.cluster.local}:${PSG_PORT:5432}/${PSG_DB:pipeline}
database.username=${PSG_USER:pipeline}
database.password=${PSG_PASS:pipeline}
database.driverClass=org.postgresql.Driver
database.max.pool.size=10
database.initial.pool.size=5

# Flyway configuration
flyway.sql-migration-prefix=v
flyway.locations=classpath:db/migration
flyway.schemas=${PSG_DB:pipeline}
flyway.placeholders.default.admin=${CP_DEFAULT_ADMIN_NAME:pipe_admin}
flyway.placeholders.default.admin.id=${CP_DEFAULT_ADMIN_ID:1}

# SSO config
server.ssl.enabled-protocols=TLSv1.1,TLSv1.2
server.ssl.ciphers=HIGH:!RC4:!aNULL:!MD5:!kEDH
server.ssl.key-store=file:/opt/api/keystore/store.jks
server.ssl.metadata=${CP_API_SRV_FED_META_DIR}/cp-api-srv-fed-meta.xml
server.ssl.key-store-password=changeit
server.ssl.keyAlias=ssl
saml.sign.key=sso
server.ssl.endpoint.id=https://${CP_API_SRV_EXTERNAL_HOST}:${CP_API_SRV_EXTERNAL_PORT}${CP_API_SRV_SAML_ID_TRAIL:/pipeline/}
saml.authn.request.binding=urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
# Create a user if it is not present in the database. Available strategies: AUTO, EXPLICIT, EXPLICIT_GROUP
saml.user.auto.create=${CP_API_SRV_SAML_AUTO_USER_CREATE:EXPLICIT}
saml.user.attributes=Email=email,FirstName=firstName,LastName=lastName,Name=firstName
saml.login.failure.redirect=/error/auth.html

# Other configuration
working.directory=/opt/api/workspace
pause.pool.size=10

# JWT configuration
jwt.key.public=${CP_API_JWT_KEY_PUBLIC}
jwt.key.private=${CP_API_JWT_KEY_PRIVATE}

# Templates configuration
templates.default.template=${CP_PREF_TEMPLATES_DEFAULT_TEMPLATE:empty}
templates.directory=/opt/api/pipe-templates
templates.folder.directory=/opt/api/folder-templates
templates.error.pages.directory=${CP_API_SRV_STATIC_DIR}/error

# Cluster management scripts config
## AWS
cluster.nodeup.script=/opt/api/scripts/aws/nodeup.py
cluster.nodedown.script=/opt/api/scripts/aws/nodedown.py
cluster.reassign.script=/opt/api/scripts/aws/node_reassign.py
cluster.node.terminate.script=/opt/api/scripts/aws/terminate_node.py
## Azure
cluster.azure.nodeup.script=/opt/api/scripts/azure/nodeup.py
cluster.azure.nodedown.script=/opt/api/scripts/azure/nodedown.py
cluster.azure.reassign.script=/opt/api/scripts/azure/node_reassign.py
cluster.azure.node.terminate.script=/opt/api/scripts/azure/terminate_node.py
#GCP
cluster.gcp.nodeup.script=/opt/api/scripts/nodeup.py
cluster.gcp.nodedown.script=/opt/api/scripts/nodedown.py
cluster.gcp.reassign.script=/opt/api/scripts/node_reassign.py
cluster.gcp.node.terminate.script=/opt/api/scripts/terminate_node.py

## Common
docker.registry.login.script=/opt/api/scripts/docker-login.sh


# Kube config
cluster.cadvisor.port=4194
cluster.cadvisor.request.period=15
cluster.cadvisor.timeout=10
cluster.cadvisor.disable.proxy=${CP_PREF_CLUSTER_CADVISOR_DISABLE_PROXY:true}
kube.namespace=default
kube.master.ip=${CP_KUBE_EXTERNAL_HOST}:${CP_KUBE_EXTERNAL_PORT}
kube.kubeadm.token=${CP_KUBE_KUBEADM_TOKEN}

# Git config
git.src.directory=src/
git.docs.directory=docs/

# Run management scripts config
commit.run.scripts.root.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/commit-run-scripts/
commit.run.script.starter.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/commit-run-scripts/commit_run_starter.sh
launch.script.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/launch.sh
pause.run.script.url=https://${CP_API_SRV_INTERNAL_HOST}:${CP_API_SRV_INTERNAL_PORT}/pipeline/commit-run-scripts/pause_run.sh

# EDGE config
kube.edge.label=EDGE
kube.edge.ip.label=cloud-pipeline/external-host
kube.edge.port.label=cloud-pipeline/external-port
kube.edge.scheme.label=cloud-pipeline/external-scheme
kube.protected.node.labels=cloud-pipeline/role=EDGE

# Utilization monitoring
monitoring.elasticsearch.url=${CP_HEAPSTER_ELK_INTERNAL_HOST:cp-heapster-elk.default.svc.cluster.local}
monitoring.elasticsearch.port=${CP_HEAPSTER_ELK_INTERNAL_PORT:30094}

# Logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Luigi pipelines handling
luigi.graph.script=/usr/lib/python2.7/site-packages/scripts/deps_graph.py

# File storages
data.storage.nfs.root.mount.point=/opt/api/file-systems
