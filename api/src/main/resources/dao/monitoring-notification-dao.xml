<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean class="com.epam.pipeline.dao.notification.MonitoringNotificationDao" id="monitoringNotificationDao" autowire="byName">
        <property name="notificationQueueSequence" value="pipeline.s_pipeline_notification_queue"/>
        <property name="createMonitoringNotificationQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.notification_queue (
                        id,
                        subject,
                        body,
                        to_user_id,
                        user_ids,
                        template_id,
                        template_parameters)
                    VALUES (
                        :ID,
                        :SUBJECT,
                        :BODY,
                        :TO_USER_ID,
                        :USER_IDS,
                        :TEMPLATE_ID,
                        :TEMPLATE_PARAMETERS)
                ]]>
            </value>
        </property>
        <property name="loadMonitoringNotificationQuery">
            <value>
                <![CDATA[
                    SELECT
                        nq.id,
                        nq.subject,
                        nq.body,
                        nq.to_user_id,
                        nq.user_ids,
                        nq.template_id,
                        nq.template_parameters
                    FROM
                        pipeline.notification_queue nq
                    WHERE nq.id = ?
                ]]>
            </value>
        </property>
        <property name="deleteNotificationsByTemplateIdQuery">
            <value>
                <![CDATA[
                    DELETE FROM pipeline.notification_queue WHERE template_id = ?
                ]]>
            </value>
        </property>
        <property name="deleteNotificationsByUserIdQuery">
            <value>
                <![CDATA[
                    DELETE FROM pipeline.notification_queue WHERE to_user_id = ?
                ]]>
            </value>
        </property>
        <property name="loadAllMonitoringNotificationsQuery">
            <value>
                <![CDATA[
                    SELECT
                        nq.id,
                        nq.subject,
                        nq.body,
                        nq.to_user_id,
                        nq.user_ids,
                        nq.template_id,
                        nq.template_parameters
                    FROM
                        pipeline.notification_queue nq
                    ORDER BY nq.id
                ]]>
            </value>
        </property>
        <property name="updateNotificationTimestampQuery">
            <value>
                <![CDATA[
                    INSERT INTO pipeline.notification_timestamp (
                        run_id,
                        notification_type,
                        timestamp)
                    VALUES (
                        :RUN_ID,
                        :NOTIFICATION_TYPE,
                        :TIMESTAMP)
                    ON CONFLICT (run_id, notification_type) DO UPDATE SET
                        timestamp = :TIMESTAMP
                ]]>
            </value>
        </property>
        <property name="loadNotificationTimestampQuery">
            <value>
                <![CDATA[
                    SELECT
                        run_id,
                        notification_type,
                        timestamp
                    FROM
                        pipeline.notification_timestamp
                    WHERE run_id = :RUN_ID AND notification_type = :NOTIFICATION_TYPE
                ]]>
            </value>
        </property>
        <property name="deleteNotificationTimestampsByRunIdQuery">
            <value>
                <![CDATA[
                    DELETE
                    FROM
                        pipeline.notification_timestamp
                    WHERE run_id = ?
                ]]>
            </value>
        </property>
        <property name="deleteNotificationTimestampsByPipelineIdQuery">
            <value>
                <![CDATA[
                    DELETE
                    FROM
                        pipeline.notification_timestamp nt
                    USING pipeline.pipeline_run pr
                    WHERE pr.run_id = nt.run_id AND pr.pipeline_id = ?
                ]]>
            </value>
        </property>
    </bean>
</beans>