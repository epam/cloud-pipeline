#!/usr/bin/env bash
# Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

LOG_STATUS=$1
LOG_TEXT=$2
LOG_TASK=$3

# Check global variables
if [ -z "$LOG_DIR" ]
  then
    echo "[WARN] Log directory is not set, using /runs"
	  export LOG_DIR=/runs
fi

# Check arguments
if [ -z "$LOG_STATUS" ]
  then
    echo "[ERROR] Log status shall be supplied"
	  exit 1
fi

if [ -z "$LOG_TEXT" ]
  then
    echo "[ERROR] Log text message shall be supplied"
	  exit 1
fi

# Get status code

## Override WARNING to general RUNNING, but with colored output (kind of hack)
if [ "$LOG_STATUS" == "WARNING" ]
then
  LOG_STATUS="RUNNING"
  CMD="from pipeline import bcolors; print(bcolors.WARNING + \"${LOG_TEXT}\" + bcolors.ENDC)"
  LOG_TEXT=$($CP_PYTHON2_PATH -c "$CMD")
fi

## Validate status code
CMD="import pipeline.api; print(pipeline.api.TaskStatus.__dict__[\"${LOG_STATUS}\"])"
LOG_STATUS_ID=$($CP_PYTHON2_PATH -c "$CMD")
if [ $? -ne 0 ]
  then
    echo "[ERROR] Invalid log status ${LOG_STATUS}"
    exit 1
fi

# Call log API
CMD="from pipeline import Logger; Logger.log_task_event(\"${LOG_TASK}\", \"${LOG_TEXT}\", status=${LOG_STATUS_ID}, api_url=\"${API}\", log_dir=\"${LOG_DIR}\", run_id=${RUN_ID})"
$CP_PYTHON2_PATH -c "$CMD"
