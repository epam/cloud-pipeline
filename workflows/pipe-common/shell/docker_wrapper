#!/usr/bin/env bash

# Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The script is a docker cli wrapper provided by Cloud Pipeline.
#
# It makes several host environment variables to be available from within DIND containers by default.
#
# It takes an environment file which will be used with docker run command as a first argument,
# docker executable absolute path as a second argument and all docker command arguments as the following
# arguments.
#
# The given environment file is built based on the launch.dind.container.vars system preference value.
#
# The wrapper won't be configured and environment variables won't be available from within DIND containers
# if CP_CAP_DIND_CONTAINER_NO_VARS system parameter is specified for the run.
#
# See https://github.com/epam/cloud-pipeline/issues/983 for more information.

ENVIRONMENT_FILE="$1"
UNDERLYING_DOCKER_EXECUTABLE="$2"
shift 2

DOCKER_OPTIONS=()
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
  --config | \
    -c | --context | \
    -H | --host | \
    -l | --log-level | \
    --tlscacert | \
    --tlscert | \
    --tlskey)
    DOCKER_OPTIONS+=("$1" "$2")
    shift 2
    ;;
  -D | --debug | \
    --tls | \
    --tlsverify | \
    -v | --version)
    DOCKER_OPTIONS+=("$1")
    shift
    ;;
  *)
    DOCKER_COMMAND="$1"
    shift
    break
    ;;
  esac
done

if [[ "$DOCKER_COMMAND" ]]; then
  DOCKER_COMMANDS=("$DOCKER_COMMAND")
  if [[ "$DOCKER_COMMAND" == "run" ]]; then
    DOCKER_COMMANDS+=("--env-file" "$ENVIRONMENT_FILE")
  fi
fi

$UNDERLYING_DOCKER_EXECUTABLE "${DOCKER_OPTIONS[@]}" "${DOCKER_COMMANDS[@]}" "$@"
